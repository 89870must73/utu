#!/bin/bash
# Thanks for using this script, Enjoy Highspeed OpenVPN Service

#############################
#############################
# Variables (Can be changed depends on your preferred values)
# Script name
MyScriptName='SigulaDev-Premium Script'

# OpenSSH Ports
SSH_Port1='22'
SSH_Port2='53'
SSH_Port2='80'

# Your SSH Banner
SSH_Banner='https://raw.githubusercontent.com/raziman869/AutoScriptDB/master/Files/Plugins/banner'

# Dropbear Ports
Dropbear_Port1='445'
Dropbear_Port2='442'

# Stunnel Ports
Stunnel_Port1='446' # through Dropbear
Stunnel_Port2='444' # through OpenSSH

# OpenVPN Ports
OpenVPN_TCP_Port='1103'
OpenVPN_UDP_Port='25222'

# Privoxy Ports
Privoxy_Port1='3356'
Privoxy_Port2='8086'

# Squid Ports
Squid_Port1='3128'
Squid_Port2='8080'
Squid_Port3='80'

# OpenVPN Config Download Port
OvpnDownload_Port='85' # Before changing this value, please read this document. It contains all unsafe ports for Google Chrome Browser, please read from line #23 to line #89: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc

# Server local time
MyVPS_Time='Asia/Manila'
#############################


#############################
#############################
## All function used for this script
#############################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################
#############################

function InstUpdates(){
 export DEBIAN_FRONTEND=noninteractive
 apt-get update
 apt-get upgrade -y
 
 # Removing some firewall tools that may affect other services
 apt-get remove --purge ufw firewalld -y

 
 # Installing some important machine essentials
 apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y
 
 # Now installing all our wanted services
 apt-get install dropbear stunnel4 privoxy ca-certificates nginx ruby apt-transport-https lsb-release squid -y

 # Installing all required packages to install Webmin
 apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
 apt-get install shared-mime-info jq fail2ban -y

 
 # Installing a text colorizer
 gem install lolcat

 # Trying to remove obsolette packages after installation
 apt-get autoremove -y
 
 # Installing OpenVPN by pulling its repository inside sources.list file 
 rm -rf /etc/apt/sources.list.d/openvpn*
 echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/openvpn.list
 wget -qO - http://build.openvpn.net/debian/openvpn/stable/pubkey.gpg|apt-key add -
 apt-get update
 apt-get install openvpn -y
}

function InstWebmin(){
 # Download the webmin .deb package
 # You may change its webmin version depends on the link you've loaded in this variable(.deb file only, do not load .zip or .tar.gz file):
 WebminFile='https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/webmin_1.920_all.deb'
 wget -qO webmin.deb "$WebminFile"
 
 # Installing .deb package for webmin
 dpkg --install webmin.deb
 
 rm -rf webmin.deb
 
 # Configuring webmin server config to use only http instead of https
 sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf
 
 # Then restart to take effect
 systemctl restart webmin
}

function InstSSH(){
 # Removing some duplicated sshd server configs
 rm -f /etc/ssh/sshd_config*
 
 # Creating a SSH server config using cat eof tricks
 cat <<'MySSHConfig' > /etc/ssh/sshd_config
# My OpenSSH Server config
Port myPORT1
Port myPORT2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 240
ClientAliveCountMax 2
UseDNS no
Banner /etc/banner
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server
MySSHConfig

 # Now we'll put our ssh ports inside of sshd_config
 sed -i "s|myPORT1|$SSH_Port1|g" /etc/ssh/sshd_config
 sed -i "s|myPORT2|$SSH_Port2|g" /etc/ssh/sshd_config

 # Download our SSH Banner
 rm -f /etc/banner
 wget -qO /etc/banner "$SSH_Banner"
 dos2unix -q /etc/banner

 # My workaround code to remove `BAD Password error` from passwd command, it will fix password-related error on their ssh accounts.
 sed -i '/password\s*requisite\s*pam_cracklib.s.*/d' /etc/pam.d/common-password
 sed -i 's/use_authtok //g' /etc/pam.d/common-password

 # Some command to identify null shells when you tunnel through SSH or using Stunnel, it will fix user/pass authentication error on HTTP Injector, KPN Tunnel, eProxy, SVI, HTTP Proxy Injector etc ssh/ssl tunneling apps.
 sed -i '/\/bin\/false/d' /etc/shells
 sed -i '/\/usr\/sbin\/nologin/d' /etc/shells
 echo '/bin/false' >> /etc/shells
 echo '/usr/sbin/nologin' >> /etc/shells
 
 # Restarting openssh service
 systemctl restart ssh
 
 # Removing some duplicate config file
 rm -rf /etc/default/dropbear*
 
 # creating dropbear config using cat eof tricks
 cat <<'MyDropbear' > /etc/default/dropbear
# My Dropbear Config
NO_START=0
DROPBEAR_PORT=PORT01
DROPBEAR_EXTRA_ARGS="-p PORT02"
DROPBEAR_BANNER="/etc/banner"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
MyDropbear

 # Now changing our desired dropbear ports
 sed -i "s|PORT01|$Dropbear_Port1|g" /etc/default/dropbear
 sed -i "s|PORT02|$Dropbear_Port2|g" /etc/default/dropbear
 
 # Restarting dropbear service
 systemctl restart dropbear
}

function InsStunnel(){
 StunnelDir=$(ls /etc/default | grep stunnel | head -n1)

 # Creating stunnel startup config using cat eof tricks
cat <<'MyStunnelD' > /etc/default/$StunnelDir
# My Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/banner"
PPP_RESTART=0
# RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
MyStunnelD

 # Removing all stunnel folder contents
 rm -rf /etc/stunnel/*
 
 # Creating stunnel certifcate using openssl
 openssl req -new -x509 -days 9999 -nodes -subj "/C=PH/ST=NCR/L=Manila/O=$MyScriptName/OU=$MyScriptName/CN=$MyScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem &> /dev/null
##  > /dev/null 2>&1

 # Creating stunnel server config
 cat <<'MyStunnelC' > /etc/stunnel/stunnel.conf
# My Stunnel Config
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0

[dropbear]
accept = Stunnel_Port1
connect = 127.0.0.1:dropbear_port_c

[openssh]
accept = Stunnel_Port2
connect = 127.0.0.1:openssh_port_c

[openssh]
accept = 587
connect = 127.0.0.1:1103
MyStunnelC

 # setting stunnel ports
 sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /etc/stunnel/stunnel.conf
 sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
 sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /etc/stunnel/stunnel.conf
 sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf

 # Restarting stunnel service
 systemctl restart $StunnelDir

}

function InsOpenVPN(){
 # Checking if openvpn folder is accidentally deleted or purged
 if [[ ! -e /etc/openvpn ]]; then
  mkdir -p /etc/openvpn
 fi

 # Removing all existing openvpn server files
 rm -rf /etc/openvpn/*

 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf' > /etc/openvpn/server_tcp.conf
# OpenVPN TCP
port OVPNTCP
proto tcp
dev tun
dev-type tun
sndbuf 100000
rcvbuf 100000
crl-verify crl.pem
ca ca.crt
cert server.crt
key server.key
tls-auth tls-auth.key 0
dh dh.pem
topology subnet
server 10.9.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
comp-lzo
user nobody
group nogroup
persist-tun
status openvpn-status.log
verb 2
mute 3
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
verify-client-cert none
username-as-common-name
myOpenVPNconf

cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# OpenVPN UDP
port OVPNUDP
proto udp
dev tun
sndbuf 0
rcvbuf 0
ca ca.crt
cert server.crt
key server.key
dh dh.pem
auth SHA512
# tls-auth ta.key 0
topology subnet
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 114.114.114.114"
push "dhcp-option DNS 8.8.8.8"
duplicate-cn
keepalive 10 120
cipher AES-256-CBC
comp-lzo
max-clients 10
user nobody
group nobody
persist-key
persist-tun
status openvpn-status.log
verb 3
crl-verify crl.pem
verify-client-cert none
username-as-common-name
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
myOpenVPNconf2

 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIDKzCCAhOgAwIBAgIJAKhw5a8i3cLVMA0GCSqGSIb3DQEBCwUAMBMxETAPBgNV
BAMMCENoYW5nZU1lMB4XDTE5MDMwNDIwMTQwM1oXDTI5MDMwMTIwMTQwM1owEzER
MA8GA1UEAwwIQ2hhbmdlTWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCvdolcAJmTiTJXFF5rmWdzBHTKWpd4A1mazxd05i0BFJtKfoKE/a3OX2Z4Uab5
99ApREeZngbWF82vsM40PTQ3jC3YZ5ShQ818c8kHiDR34E8kmevaRCej2Qo0XEz7
rDsqpUTbTVyzYwg2IoScj+fBqTwY05/ArrvTrikHZRNFIwoS0gqEKBbL3xv1Tjej
sZTF9WEaDsIE99pH6Kc9y3L57hC3cX4FPX3DNZryflQ1Xn6g34eSuxI6YRmgx57v
kz2xPH13NLt7S9v7Wi7PJDoclKx3mhzWUWq6EDl1kXRZ26C9pKUueMZ0NubyFziC
bgQF2z4s0/9731pOEl5G1RVHAgMBAAGjgYEwfzAdBgNVHQ4EFgQUj5Mp92aCBHiZ
UM6N358AQenzoOkwQwYDVR0jBDwwOoAUj5Mp92aCBHiZUM6N358AQenzoOmhF6QV
MBMxETAPBgNVBAMMCENoYW5nZU1lggkAqHDlryLdwtUwDAYDVR0TBAUwAwEB/zAL
BgNVHQ8EBAMCAQYwDQYJKoZIhvcNAQELBQADggEBAJnmf9vzIlfE+Xvx9gTIvZZ5
HKoFYRdZ64XQ+cztJFUGdxe9Wd6J2ZQTHDA8yvkONMvtE67JdJ/hpL+gF6lDyTHS
HyTYV1nZS/wVqSlm5Mna7qh442CuDj+ZQAO+9Wa+1ZtcIjUodmViCHya6VlxLtdB
1NFhta9ro5GsElueOLTvfTYA+tEpw2M4UJGH9FFYdpxzn93LN/AtSCv9QEkevK0s
cb6vBRzb7CKn4qgvdKPywYIeE5gTE3Ehf18KI0XnSBYdcF1fwYZZ63IivdeubA1L
hoQ3lvldjuR6k0MYwOl33HO/VFEn2+Zipg2Llzyw1vyizCgFynnwCp/xIma4Ics=
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/client.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 2 (0x2)
    Signature Algorithm: sha1WithRSAEncryption
        Issuer: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=changeme/name=changeme/emailAddress=mail@host.domain
        Validity
            Not Before: Jun 21 20:40:57 2016 GMT
            Not After : Jun 19 20:40:57 2026 GMT
        Subject: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=client/name=changeme/emailAddress=mail@host.domain
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c4:06:2b:41:46:00:11:ca:42:37:c8:08:e3:31:
                    1c:fc:68:98:3c:db:48:b6:a7:6d:d1:4d:9e:a6:1f:
                    0d:37:d7:c9:6d:df:95:72:90:4c:9a:d0:61:e2:11:
                    40:82:3d:45:4b:7e:ac:4c:5b:50:cf:31:61:26:7d:
                    16:ba:08:da:db:af:9e:fa:b8:ee:88:8e:68:68:d8:
                    af:8f:40:d8:46:f9:49:6b:f8:59:69:6e:8a:2f:f3:
                    56:6b:1b:4f:a2:e0:50:90:6d:51:38:b5:fa:4f:bd:
                    ce:d5:46:fd:9a:2a:8f:98:2f:3c:4d:e3:3a:9e:7e:
                    46:9c:24:01:65:91:e1:20:bd:15:cf:bd:f8:bc:49:
                    39:c1:40:e7:63:2e:27:b2:eb:1b:5c:48:83:a0:73:
                    55:df:fc:2b:9b:46:75:90:92:05:db:f5:ee:b3:36:
                    96:25:22:72:93:48:ca:79:bd:8d:3b:11:a8:5c:a8:
                    21:b3:1a:80:9a:fe:2b:06:90:51:2b:c3:c6:7d:95:
                    39:d5:c4:c0:48:76:19:1a:68:bd:ec:6b:7b:4b:e3:
                    31:ab:95:5b:7e:ed:e1:2b:30:a6:ba:70:b6:88:12:
                    dc:e3:53:e4:21:d2:dc:f5:78:8b:f2:41:73:47:8d:
                    75:4f:c4:40:b9:17:fa:37:8d:a6:81:f1:02:de:ad:
                    c9:37
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Comment: 
                Easy-RSA Generated Certificate
            X509v3 Subject Key Identifier: 
                96:43:6F:58:A0:CB:00:69:35:C7:A4:6F:53:BE:98:31:10:5C:73:43
            X509v3 Authority Key Identifier: 
                keyid:9B:8B:AC:2D:C0:C9:DE:E8:F1:65:0E:52:2A:8C:1E:F5:A1:DB:E6:82
                DirName:/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=changeme/CN=changeme/name=changeme/emailAddress=mail@host.domain
                serial:E9:26:61:3A:01:0A:AC:1B

            X509v3 Extended Key Usage: 
                TLS Web Client Authentication
            X509v3 Key Usage: 
                Digital Signature
    Signature Algorithm: sha1WithRSAEncryption
         b9:81:2d:a6:2a:6f:27:54:d9:2b:3b:46:07:cb:68:bf:cc:77:
         e4:86:73:9c:fd:fa:2c:30:54:28:09:3c:b9:ab:88:6d:76:15:
         08:2f:e0:82:d3:07:a6:26:d1:53:31:4f:44:aa:c9:b2:9d:47:
         17:59:d7:a2:89:cd:88:72:a8:6f:9f:c0:11:72:f2:77:79:41:
         46:d5:86:06:f5:7a:7b:ce:ae:2d:fe:13:4e:7f:68:58:ff:a9:
         aa:67:b1:66:88:8f:1b:ab:a3:86:2d:65:95:4f:81:93:69:6c:
         a8:5d:ab:cf:df:7f:ce:c1:e7:b5:97:63:dc:d1:8d:7c:1f:ec:
         e8:1a:aa:8e:aa:07:61:56:2b:2f:39:2d:ba:fd:26:dc:69:4b:
         93:8c:b4:7b:f5:0c:63:64:d1:68:eb:78:87:c9:92:74:59:79:
         26:df:01:a4:bf:ba:46:cf:e2:71:62:20:fa:34:05:b7:db:23:
         96:03:8f:05:a3:e6:1e:ba:7e:37:dd:dd:10:6d:cd:e6:e1:a9:
         44:ca:c5:27:cb:64:1f:17:f6:b7:97:f6:46:06:e6:4d:cf:67:
         63:1f:c8:cd:da:3d:e0:73:37:05:18:a8:b9:2b:e4:c9:22:85:
         e7:99:44:dd:2f:1b:a6:eb:22:43:d6:04:dc:92:83:b1:fa:01:
         26:07:37:ab
-----BEGIN CERTIFICATE-----
MIIFGjCCBAKgAwIBAgIBAjANBgkqhkiG9w0BAQUFADCBojELMAkGA1UEBhMCVVMx
CzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxTYW5GcmFuY2lzY28xFTATBgNVBAoTDEZv
cnQtRnVuc3RvbjERMA8GA1UECxMIY2hhbmdlbWUxETAPBgNVBAMTCGNoYW5nZW1l
MREwDwYDVQQpEwhjaGFuZ2VtZTEfMB0GCSqGSIb3DQEJARYQbWFpbEBob3N0LmRv
bWFpbjAeFw0xNjA2MjEyMDQwNTdaFw0yNjA2MTkyMDQwNTdaMIGgMQswCQYDVQQG
EwJVUzELMAkGA1UECBMCQ0ExFTATBgNVBAcTDFNhbkZyYW5jaXNjbzEVMBMGA1UE
ChMMRm9ydC1GdW5zdG9uMREwDwYDVQQLEwhjaGFuZ2VtZTEPMA0GA1UEAxMGY2xp
ZW50MREwDwYDVQQpEwhjaGFuZ2VtZTEfMB0GCSqGSIb3DQEJARYQbWFpbEBob3N0
LmRvbWFpbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMQGK0FGABHK
QjfICOMxHPxomDzbSLanbdFNnqYfDTfXyW3flXKQTJrQYeIRQII9RUt+rExbUM8x
YSZ9FroI2tuvnvq47oiOaGjYr49A2Eb5SWv4WWluii/zVmsbT6LgUJBtUTi1+k+9
ztVG/Zoqj5gvPE3jOp5+RpwkAWWR4SC9Fc+9+LxJOcFA52MuJ7LrG1xIg6BzVd/8
K5tGdZCSBdv17rM2liUicpNIynm9jTsRqFyoIbMagJr+KwaQUSvDxn2VOdXEwEh2
GRpovexre0vjMauVW37t4SswprpwtogS3ONT5CHS3PV4i/JBc0eNdU/EQLkX+jeN
poHxAt6tyTcCAwEAAaOCAVkwggFVMAkGA1UdEwQCMAAwLQYJYIZIAYb4QgENBCAW
HkVhc3ktUlNBIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUlkNvWKDL
AGk1x6RvU76YMRBcc0MwgdcGA1UdIwSBzzCBzIAUm4usLcDJ3ujxZQ5SKowe9aHb
5oKhgaikgaUwgaIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMM
U2FuRnJhbmNpc2NvMRUwEwYDVQQKEwxGb3J0LUZ1bnN0b24xETAPBgNVBAsTCGNo
YW5nZW1lMREwDwYDVQQDEwhjaGFuZ2VtZTERMA8GA1UEKRMIY2hhbmdlbWUxHzAd
BgkqhkiG9w0BCQEWEG1haWxAaG9zdC5kb21haW6CCQDpJmE6AQqsGzATBgNVHSUE
DDAKBggrBgEFBQcDAjALBgNVHQ8EBAMCB4AwDQYJKoZIhvcNAQEFBQADggEBALmB
LaYqbydU2Ss7RgfLaL/Md+SGc5z9+iwwVCgJPLmriG12FQgv4ILTB6Ym0VMxT0Sq
ybKdRxdZ16KJzYhyqG+fwBFy8nd5QUbVhgb1envOri3+E05/aFj/qapnsWaIjxur
o4YtZZVPgZNpbKhdq8/ff87B57WXY9zRjXwf7Ogaqo6qB2FWKy85Lbr9JtxpS5OM
tHv1DGNk0WjreIfJknRZeSbfAaS/ukbP4nFiIPo0BbfbI5YDjwWj5h66fjfd3RBt
zebhqUTKxSfLZB8X9reX9kYG5k3PZ2MfyM3aPeBzNwUYqLkr5MkiheeZRN0vG6br
IkPWBNySg7H6ASYHN6s=
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/client.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEBitBRgARykI3
yAjjMRz8aJg820i2p23RTZ6mHw0318lt35VykEya0GHiEUCCPUVLfqxMW1DPMWEm
fRa6CNrbr576uO6Ijmho2K+PQNhG+Ulr+Flpboov81ZrG0+i4FCQbVE4tfpPvc7V
Rv2aKo+YLzxN4zqefkacJAFlkeEgvRXPvfi8STnBQOdjLiey6xtcSIOgc1Xf/Cub
RnWQkgXb9e6zNpYlInKTSMp5vY07EahcqCGzGoCa/isGkFErw8Z9lTnVxMBIdhka
aL3sa3tL4zGrlVt+7eErMKa6cLaIEtzjU+Qh0tz1eIvyQXNHjXVPxEC5F/o3jaaB
8QLerck3AgMBAAECggEATziHBqw5nvb06AJJxTe2FTRYQlAFBPyJX0tVUKG//8+P
sn3nshMrQm3xASIjxf7pIGejToChGftE3f8zzh+CA8LoJz/R9xJGlAjueqCkR5q7
14zY5cksw9A+Hq888gBhzty/NIInFU8KZht4pnOI8OI2JuwsZp11/+h1QA1CxK2v
uOSBjLcxD5dWbKrmh77rPxHfIOFnYD/WyXhD8RCnHRh5aedTPAHkdHhrs5A+Y8MF
cVjJi8VpeN6IWLYH6OvrLlvgL3PF2W8IM8UbZ5/HAvAsvpm6J4XWXarRSx4nU9U5
d1dtW2jGHadBAY/H6pLUzvjLe9HK/R+KGSQnrK0e0QKBgQD+Xaf1O/FeLpICsfsO
ETMhiXwIWkirut0El/8+5e3crnpknB/gWkVK7ZX7FaRhD+hqeMvT+utRrY4T/ol7
WZ7QNUraTQ842GZrtqJoso6hBxgdwnIrJhJQ62gVmhP+ZpBFI8r7Y/W8SJw7dJhN
5SoTpsGMzoJiSE9AaEYoqZCvnQKBgQDFSI+U9H7tgSpcLUW0SuOnfjIVS8R6iUOB
AVDJvjfARVw81wm/VDz5WJkeG1s/CRsKiyETFU/IWssHyVogWhTWyiBcmipVYNHm
KDQQPv5J/qsbgBGv4Xg99kaTgTc2f2A/l++0WL4CZhiU/e70iBOM8bLmcQnIvIOh
a6DUv4QF4wKBgGeIUVvE2Tp/dBi6vrf8Eja9UgnITbnwZhN/lnnQdp+TOOgIkATu
WTPlPl2jcnO7WNs1balLgUqOfLzwpp7ZXIXcmyn9oYt+sTl4beR1gQ5T5+H9CiE7
7sqW9peMTkUHFAPATNdD2XqYh1a/31odQ6IaBr+8Ml+0lOVfS+czFVwVAoGAGbg7
/89gPNZ6D0pXrAmXZF6vaNdX5iG/CzKAtcx2uDpSrBvcyXTR/i/uxl4Kp00omVdK
GJLOs/AiSAGYHl+gF+CCF5CBtF/K/ZaAMx4DSOJKrGsl4ygh5PIWgWR3LkOs6J2G
QpzPKMDms4XngTm8UsOv7xsNi34IKyM89H+DVsECgYEAvUD/ou/jW77TxPmalI1Y
JKsoOihYh9dytJKyelQcCU+K3Dlyl2rNRnGEDJBT39hPQ/WvvL28IkGeHyNE5F+I
sUB+Yx4tpMhPI/4d1aGZQcGmwfcbP9fzOGOdiQD/82Qg5D5Npuwk2Z0Il8LmxWEB
o3YdDzxYQLBizpEFu+rU1A4=
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF18'> /etc/openvpn/tls-auth.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
a1be3d771e5ee8d0c9518c8769cfa711
bbfa16d5396bebb61642499d6648b4cb
8888351b39b7cd12b976e9beeb6cf378
9db67c7602bbe9d3b2b0286e5debb626
1281a9f62257132f2385605e583ecbb4
90430ab8335264ade0a89a4c4189bae3
0533a5e864473bef36448460132decf6
b5639c2054c63b525718e5707c7cafc8
329c3ddd0e8d6dd15027ec22f3fa61ac
1ee45db79f957f3d83cdf0bf24b79c77
4d29417da93908e0a9c770698cc4c868
792c631c1a606a770f21d054dc76d3fd
506a150707d942fc8dfd6ec38786af70
a91cefc6de73bbdb4f561d161922b882
b1973bad35db923ba2918cc369a3d5b3
74abf271edabcf85cdb0f53da6dc5a08
-----END OpenVPN Static key V1-----
EOF18
 cat <<'EOF107'> /etc/openvpn/server.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            61:0f:3c:32:b8:5d:fb:0a:b8:c7:8a:d2:fb:c9:89:b0
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=ChangeMe
        Validity
            Not Before: Mar  4 20:15:26 2019 GMT
            Not After : Mar  1 20:15:26 2029 GMT
        Subject: CN=server
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:b6:20:a9:f9:18:48:6a:6a:a8:cf:34:d5:54:fc:
                    f9:90:a2:f8:15:f6:8d:c4:55:25:a4:b4:fb:42:8c:
                    d0:9d:1b:d4:40:7d:77:01:51:8b:92:b7:07:2e:ec:
                    2e:d4:9f:79:93:cc:c1:4a:d9:7a:b8:f4:b1:2b:34:
                    46:54:79:6f:9c:2f:7f:85:d3:cf:22:4c:35:5d:8c:
                    38:8c:e1:68:b8:61:a7:ea:ce:46:2e:3a:fe:2d:ae:
                    32:71:9d:eb:78:d1:24:cb:9e:26:c1:2d:70:7b:b0:
                    6e:1f:37:77:e4:07:02:68:32:15:0c:ae:c5:6d:53:
                    24:3a:c1:90:44:b5:d1:84:02:59:e8:ed:71:a4:9d:
                    04:6f:b4:3c:ae:84:86:5c:7c:02:24:0f:16:98:ab:
                    b2:34:9e:f3:d4:ba:ae:1b:2b:fc:d5:28:72:0c:39:
                    49:6c:05:17:a8:26:8a:7d:26:da:d5:80:04:59:bc:
                    3d:26:f5:cc:9f:12:75:6f:ea:3b:5d:2e:5f:44:be:
                    42:1e:01:cb:8d:f3:ad:e8:a8:94:17:50:ae:83:a4:
                    25:b2:de:fb:9a:a5:f2:c8:25:22:5f:54:cf:ee:54:
                    98:06:17:15:3e:9a:7d:46:da:07:6a:80:c7:88:80:
                    77:cb:3d:b7:95:99:61:8f:b4:57:9a:bb:77:a4:0c:
                    d5:6f
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier: 
                A8:87:7D:93:27:D4:B0:D7:36:B8:2E:26:9A:CD:C3:F4:8F:BD:C4:AA
            X509v3 Authority Key Identifier: 
                keyid:8F:93:29:F7:66:82:04:78:99:50:CE:8D:DF:9F:00:41:E9:F3:A0:E9
                DirName:/CN=ChangeMe
                serial:A8:70:E5:AF:22:DD:C2:D5

            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
            X509v3 Subject Alternative Name: 
                DNS:server
    Signature Algorithm: sha256WithRSAEncryption
         59:5f:55:e0:fa:bf:39:07:a3:f1:13:7d:2a:5d:6e:8d:1c:ae:
         fa:3a:a6:23:66:2c:57:71:cf:6e:ce:60:87:78:22:9a:b8:60:
         18:19:d0:b3:9f:37:cf:ad:cf:79:4b:b7:96:82:e5:29:1b:ad:
         e7:06:e2:15:d4:c1:84:c9:e3:e0:73:3a:8a:86:10:51:c5:2e:
         41:02:d9:96:2b:c1:2b:fa:4d:97:0b:6f:93:de:f9:d8:7c:70:
         92:67:38:a8:9c:23:66:be:90:dc:82:69:7c:0a:8a:2c:09:8b:
         51:8a:1c:b7:bd:5a:68:8f:66:a9:9e:ab:4c:e9:ae:b0:53:fd:
         b2:bf:a7:3b:d4:09:71:5a:b8:c4:d9:c5:7a:a2:9c:de:47:54:
         87:b8:5a:98:70:ab:08:1d:b1:25:35:bb:6f:c4:02:e6:43:83:
         a3:e3:a8:20:ab:2e:c5:47:a5:c3:51:6f:63:3f:f7:eb:1a:e1:
         9e:14:8b:af:2c:5a:3f:fd:fe:3f:43:50:d8:6a:90:59:23:82:
         c1:5a:9c:b9:22:da:59:0b:af:a3:e6:a8:56:3b:c5:ab:7f:06:
         40:83:d9:bc:b0:b8:f4:1a:13:ee:e2:2c:7c:e1:1f:91:5f:c2:
         5b:b0:56:25:69:66:30:f5:0c:67:4a:94:d6:c5:02:53:9a:93:
         de:97:39:bd
-----BEGIN CERTIFICATE-----
MIIDVjCCAj6gAwIBAgIQYQ88Mrhd+wq4x4rS+8mJsDANBgkqhkiG9w0BAQsFADAT
MREwDwYDVQQDDAhDaGFuZ2VNZTAeFw0xOTAzMDQyMDE1MjZaFw0yOTAzMDEyMDE1
MjZaMBExDzANBgNVBAMMBnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALYgqfkYSGpqqM801VT8+ZCi+BX2jcRVJaS0+0KM0J0b1EB9dwFRi5K3
By7sLtSfeZPMwUrZerj0sSs0RlR5b5wvf4XTzyJMNV2MOIzhaLhhp+rORi46/i2u
MnGd63jRJMueJsEtcHuwbh83d+QHAmgyFQyuxW1TJDrBkES10YQCWejtcaSdBG+0
PK6Ehlx8AiQPFpirsjSe89S6rhsr/NUocgw5SWwFF6gmin0m2tWABFm8PSb1zJ8S
dW/qO10uX0S+Qh4By43zreiolBdQroOkJbLe+5ql8sglIl9Uz+5UmAYXFT6afUba
B2qAx4iAd8s9t5WZYY+0V5q7d6QM1W8CAwEAAaOBpzCBpDAJBgNVHRMEAjAAMB0G
A1UdDgQWBBSoh32TJ9Sw1za4LiaazcP0j73EqjBDBgNVHSMEPDA6gBSPkyn3ZoIE
eJlQzo3fnwBB6fOg6aEXpBUwEzERMA8GA1UEAwwIQ2hhbmdlTWWCCQCocOWvIt3C
1TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwEQYDVR0RBAowCIIG
c2VydmVyMA0GCSqGSIb3DQEBCwUAA4IBAQBZX1Xg+r85B6PxE30qXW6NHK76OqYj
ZixXcc9uzmCHeCKauGAYGdCznzfPrc95S7eWguUpG63nBuIV1MGEyePgczqKhhBR
xS5BAtmWK8Er+k2XC2+T3vnYfHCSZzionCNmvpDcgml8CoosCYtRihy3vVpoj2ap
nqtM6a6wU/2yv6c71AlxWrjE2cV6opzeR1SHuFqYcKsIHbElNbtvxALmQ4Oj46gg
qy7FR6XDUW9jP/frGuGeFIuvLFo//f4/Q1DYapBZI4LBWpy5ItpZC6+j5qhWO8Wr
fwZAg9m8sLj0GhPu4ix84R+RX8JbsFYlaWYw9QxnSpTWxQJTmpPelzm9
-----END CERTIFICATE-----
EOF107
 cat <<'EOF113'> /etc/openvpn/server.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC2IKn5GEhqaqjP
NNVU/PmQovgV9o3EVSWktPtCjNCdG9RAfXcBUYuStwcu7C7Un3mTzMFK2Xq49LEr
NEZUeW+cL3+F088iTDVdjDiM4Wi4YafqzkYuOv4trjJxnet40STLnibBLXB7sG4f
N3fkBwJoMhUMrsVtUyQ6wZBEtdGEAlno7XGknQRvtDyuhIZcfAIkDxaYq7I0nvPU
uq4bK/zVKHIMOUlsBReoJop9JtrVgARZvD0m9cyfEnVv6jtdLl9EvkIeAcuN863o
qJQXUK6DpCWy3vuapfLIJSJfVM/uVJgGFxU+mn1G2gdqgMeIgHfLPbeVmWGPtFea
u3ekDNVvAgMBAAECggEAQrfkjGPg41r/TCjGncOuiNWqnCEd/fZTO+swwEhlg6hW
MOnFVq5QuwZhk0biQPHKz+IKTSkuU+MPpAwaV4fE4ypjRNs63g2c3xAnBzTr79+W
a+X0v6rMwl82C3kWccPr/suI1uuWcTlInhbrzJTkxNbT7zl3CX2ToBKYjxMsFXdI
yhJFXBloGhyRMU6A8cgXruiwJGILKWhhrBP9fDk/rXUaBYUP1fiBVGFE0gwilvyP
EQ3hOc16eVmwArBvN1h12OavMXGQ654Mur5CeVvw9tg2eF6JjRcz8AO7nFIXbxP6
J1vFN1e4In9F7Jpxy0inwkmuvTosAu1BokLPcgi5AQKBgQDc7Wu6jfGdarfhlJ1A
nb2o0WCIxEmGWfYnUFWeb/lYqNkZBnRV8HeR/D+llP8zDFSTEQriLMFrYoBAMg3Q
J5LsStYLCy5gEyoDmPR/mbhCa7P6yrmwT18pCtimq0MdGlyNqTaE2dFbQb7JN8Ih
c90MFJBrwHgfx8r6e5p0bOnIXwKBgQDTCmcFVJ0ybyP8xtHWP6DRW4yytmsMQSh3
rTIIPrQXsJEflZppgyQtlbHoMslYE+fm3AwCmtj5AaqXNdZtWCi+dN5RmhyAPR+Q
SO621HPjEGs0te7ZX5Ivxb9Zqoob6UI+G3hxeumN6DHCS08AcVay/0GLkSHXRBoc
CgLhuWVM8QKBgCt9XTiTGp33VQ1F+RKwOpaR6OPjZ+nXqboheUlAF6CZVGs1tw73
0EHfmxPYWchNxBRTRYYyczzVXhPFBq0ULTrwnGP+JnnpK9sbb/3yX7BLjVlwMM+B
QGVO6kkc65A+ETwdtErAqhLBxXHM1R1KtpfbMHbVo4/1/4IBdO04R2kXAoGBAJvK
xhqNSC5/FVX5f9ZlylZC+y7Cs2usfi860AB+KXyDf96NFhxmD0MHivoa47/9keg+
8S7LGPlZXZGa0NyPhCR1KdmbpwaUGMTu0ipt087/w+R5mgUmJEjX9lY/Kw1HuPsY
VGWRkvCLRJBl/8AX6yTggoaBcTX0tEGWsmHn9vxBAoGAZd1rtx0eFCx9KzPOu+rw
MMy7Qlv2lTCnRa5OA/ADVuO41ccHG6D3k+VfNZrUDPfPNjSz38LI+7cxIg1CPLEn
xaZOA3ZRfYYLQ2Jisdlmg02icFVwkos38+4G1P44ju6Yfb6M4KMmwso1p4KfY95t
meWMmQ6we0aNi1htNzkm5FM=
-----END PRIVATE KEY-----
EOF113
 cat <<'EOF13'> /etc/openvpn/dh.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAtEmw05Q+Akuu4jqfeXRqh6/qs6NkifMziwO2h/8YsPUnno/1R84k
eSHK/JKDLcdR07+kXPkBAX6iUYQMYE9cPvIS6PYgySXDckk0oCuJhBt5pI5Amvsr
Mw9Z1orzUeSIdklYr10EQANEMvA2c60gC3yokZk/Yv+8SpVuUr6t6MQ0N1csvTS0
mithf6laG/4+Nd/tlFg4LCghtP37E1DkpcxIPTLVMbdWJEr1Jc2SQuRMtazI7S0l
OMlfs/Qv9XS7bULBe5A/Xr0t0DO7Ms4hbr5mK08bKyFwfePaFCkqPFTXDPPBiU6z
Za8iu4bd5GqP5H3ueEX/3OFWxc7piVo0KwIBAg==
-----END DH PARAMETERS-----
EOF13
 cat <<'EOF103'> /etc/openvpn/crl.pem
-----BEGIN X509 CRL-----
MIIBpTCBjgIBATANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhDaGFuZ2VNZRcN
MTkwMzA0MjAxNTI3WhcNMjkwMzAxMjAxNTI3WqBHMEUwQwYDVR0jBDwwOoAUj5Mp
92aCBHiZUM6N358AQenzoOmhF6QVMBMxETAPBgNVBAMMCENoYW5nZU1lggkAqHDl
ryLdwtUwDQYJKoZIhvcNAQELBQADggEBAFG+YgYXVDCANhFuPGmnhBAJJ7MIYUMX
DzE8Nb1llAS26a6gtjhBlrTgs9j2iOaqjXLMESQHazRPqXqG2Q7aMKtFh/c8lWZk
+qyNWGLc94MVaTN1wbEiSRtLs6/jRPxOQVfymoxQ26CvMVGed7pYh9OtRinsqgjA
JV3lm0j9fWIx1nS+V0Vksg0UrO3Q57ZUhipUBer8iNYf1uCA1qv1dLnftPFZkdYE
x13X5sqTj6iRFyEZvzlGsg+nwBUUvY2EQxTt6Je3pyiTdZUCTVK9kaTCih+VWax3
JkncA59RqjKmRJgX3RHRfdrbfxKK8SeXf93ZntbMg0isNfayXU8KJfE=
-----END X509 CRL-----
EOF103

 # Getting all dns inside resolv.conf then use as Default DNS for our openvpn server
 grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_tcp.conf
done

 # Creating a New update message in server.conf
 cat <<'NUovpn' > /etc/openvpn/server.conf
 # New Update are now released, OpenVPN Server
 # are now running both TCP and UDP Protocol. (Both are only running on IPv4)
 # But our native server.conf are now removed and divided
 # Into two different configs base on their Protocols:
 #  * OpenVPN TCP (located at /etc/openvpn/server_tcp.conf
 #  * OpenVPN UDP (located at /etc/openvpn/server_udp.conf
 # 
 # Also other logging files like
 # status logs and server logs
 # are moved into new different file names:
 #  * OpenVPN TCP Server logs (/etc/openvpn/tcp.log)
 #  * OpenVPN UDP Server logs (/etc/openvpn/udp.log)
 #  * OpenVPN TCP Status logs (/etc/openvpn/tcp_stats.log)
 #  * OpenVPN UDP Status logs (/etc/openvpn/udp_stats.log)
 #
 # Server ports are configured base on env vars
 # executed/raised from this script (OpenVPN_TCP_Port/OpenVPN_UDP_Port)
 #
 # Enjoy the new update
 # Script Updated by SigulaDev
NUovpn

 # setting openvpn server port
 sed -i "s|OVPNTCP|$OpenVPN_TCP_Port|g" /etc/openvpn/server_tcp.conf
 sed -i "s|OVPNUDP|$OpenVPN_UDP_Port|g" /etc/openvpn/server_udp.conf
 
# Getting some OpenVPN plugins for unix authentication
cd
wget https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/plugin.tgz
tar -xzvf /root/plugin.tgz -C /etc/openvpn/
rm -f plugin.tgz
 
 # Some workaround for OpenVZ machines for "Startup error" openvpn service
 if [[ "$(hostnamectl | grep -i Virtualization | awk '{print $2}' | head -n1)" == 'openvz' ]]; then
 sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn*
 systemctl daemon-reload
fi

 # Allow IPv4 Forwarding
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.conf
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.d/*.conf
 echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/20-openvpn.conf
 sysctl --system &> /dev/null

 # Iptables Rule for OpenVPN server
 cat <<'EOFipt' > /etc/openvpn/openvpn.bash
#!/bin/bash
PUBLIC_INET="$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)"
IPCIDR='10.200.0.0/16'
IPCIDR2='10.201.0.0/16'
iptables -I FORWARD -s $IPCIDR -j ACCEPT
iptables -I FORWARD -s $IPCIDR2 -j ACCEPT
iptables -t nat -A POSTROUTING -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR2 -o $PUBLIC_INET -j MASQUERADE
EOFipt
 chmod +x /etc/openvpn/openvpn.bash
 bash /etc/openvpn/openvpn.bash

 # Enabling IPv4 Forwarding
 echo 1 > /proc/sys/net/ipv4/ip_forward

 
 # Starting OpenVPN server
 systemctl start openvpn@server_tcp
 systemctl enable openvpn@server_tcp
 systemctl start openvpn@server_udp
 systemctl enable openvpn@server_udp

}
function InsProxy(){

 # Removing Duplicate privoxy config
 rm -rf /etc/privoxy/config*
 
 # Creating Privoxy server config using cat eof tricks
 cat <<'privoxy' > /etc/privoxy/config
# My Privoxy Server Config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address 0.0.0.0:Privoxy_Port1
listen-address 0.0.0.0:Privoxy_Port2
toggle 1
enable-remote-toggle 0
enable-remote-http-toggle 0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries 1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 IP-ADDRESS
privoxy

 # Setting machine's IP Address inside of our privoxy config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/privoxy/config
 
 # Setting privoxy ports
 sed -i "s|Privoxy_Port1|$Privoxy_Port1|g" /etc/privoxy/config
 sed -i "s|Privoxy_Port2|$Privoxy_Port2|g" /etc/privoxy/config

 # Removing Duplicate Squid config
 rm -rf /etc/squid/squid.con*
 
 # Creating Squid server config using cat eof tricks
 cat <<'mySquid' > /etc/squid/squid.conf
# My Squid Proxy Server Config
acl VPN dst IP-ADDRESS/32
http_access allow VPN
http_access deny all 
http_port 0.0.0.0:Squid_Port1
http_port 0.0.0.0:Squid_Port2
http_port 0.0.0.0:Squid_Port3
### Allow Headers
acl all src 0.0.0.0/0
http_access allow all
forwarded_for off
via off
request_header_access Host allow all
request_header_access Content-Length allow all
request_header_access Content-Type allow all
request_header_access All deny all
coredump_dir /var/spool/squid
dns_nameservers 1.1.1.1 1.0.0.1
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname localhost
mySquid

 # Setting machine's IP Address inside of our Squid config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/squid/squid.conf
 
 # Setting squid ports
 sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port3|$Squid_Port3|g" /etc/squid/squid.conf

 # Starting Proxy server
 echo -e "Restarting proxy server..."
 systemctl restart squid
}

function OvpnConfigs(){
 # Creating nginx config for our ovpn config downloads webserver
 cat <<'myNginxC' > /etc/nginx/conf.d/johnfordtv-ovpn-config.conf
# My OpenVPN Config Download Directory
server {
 listen 0.0.0.0:myNginx;
 server_name localhost;
 root /var/www/openvpn;
 index index.html;
}
myNginxC

 # Setting our nginx config port for .ovpn download site
 sed -i "s|myNginx|$OvpnDownload_Port|g" /etc/nginx/conf.d/johnfordtv-ovpn-config.conf

 # Removing Default nginx page(port 80)
 rm -rf /etc/nginx/sites-*

 # Creating our root directory for all of our .ovpn configs
 rm -rf /var/www/openvpn
 mkdir -p /var/www/openvpn

 # Creating our root directory for all of our .ovpn configs
 rm -rf /var/www/openvpn
 mkdir -p /var/www/openvpn
# Now creating all of our OpenVPN Configs 
cat <<EOF152> /var/www/openvpn/tcp.ovpn
client
dev tun
remote $IPADDR $OpenVPN_TCP_Port tcp
http-proxy $IPADDR $Squid_Port1
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1

<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF152

cat <<EOF16> /var/www/openvpn/udp.ovpn
# Credits to GakodX
client
dev tun
proto udp
sndbuf 0
rcvbuf 0
remote $IPADDR $OpenVPN_UDP_Port
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA512
cipher AES-256-CBC
comp-lzo
setenv opt block-outside-dns
key-direction 1
verb 3
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF16

cat <<EOF17> /var/www/openvpn/ssl.ovpn
client
proto tcp-client
dev tun
remote 127.0.0.1 443
route $IPADDR 255.255.255.255 net_gateway 
http-proxy $IPADDR 8080
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/client.crt)
</cert>
<key>
$(cat /etc/openvpn/client.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF17

 # Creating OVPN download site index.html
cat <<'mySiteOvpn' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">

<!-- Simple OVPN Download site by Sigula -->

<head><meta charset="utf-8" /><title>Sigula OVPN Config Download</title><meta name="description" content="MyScriptName Server" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Config List</h5><br /><ul class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> UDP Server For TU/CTC/CTU Promos</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/tcp.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> TCP+Proxy Server For TU/CTC/CTU Promos</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/udp.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Globe/TM <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For EasySURF/GoSURF/GoSAKTO Promos with WNP,SNS,FB and IG freebies</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/ssl.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Modem</span><br /><small> Without Promo/Noload (Reconnecting Server, Use Low-latency VPS for fast reconnectivity)</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/sun-noload.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li></ul></div></div></div></div></body></html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
 sed -i "s|NGINXPORT|$OvpnDownload_Port|g" /var/www/openvpn/index.html
 sed -i "s|IP-ADDRESS|$IPADDR|g" /var/www/openvpn/index.html

 # Restarting nginx service
 systemctl restart nginx
 
 # Creating all .ovpn config archives
 cd /var/www/openvpn
 zip -qq -r configs.zip *.ovpn
 cd
}

function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)"

function ConfStartup(){
 # Daily reboot time of our machine
 # For cron commands, visit https://crontab.guru
 echo -e "0 4\t* * *\troot\treboot" > /etc/cron.d/b_reboot_job

 # Creating directory for startup script
 rm -rf /etc/Sigula
 mkdir -p /etc/Sigula
 chmod -R 755 /etc/Sigula
 
 # Creating startup script using cat eof tricks
 cat <<'EOFSH' > /etc/johnfordtv/startup.sh
#!/bin/bash
# Setting server local time
ln -fs /usr/share/zoneinfo/MyVPS_Time /etc/localtime

# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive

# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $(wget -4qO- http://ipinfo.io/ip) -p tcp -m multiport --dport 1:65535 -j ACCEPT

# Allowing OpenVPN to Forward traffic
/bin/bash /etc/openvpn/openvpn.bash

# Deleting Expired SSH Accounts
/usr/local/sbin/delete_expired &> /dev/null
exit 0
EOFSH
 cat <<'FordServ' > /etc/systemd/system/Sigula.service
 
 # Setting server local time every time this machine reboots
 sed -i "s|MyVPS_Time|$MyVPS_Time|g" /etc/Sigula/startup.sh

 # 
 rm -rf /etc/sysctl.d/99*

 # Setting our startup script to run every machine boots 
 cat <<'FordServ' > /etc/systemd/system/Sigula.service
[Unit]
Description=Sigula Startup Script
Before=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
ExecStart=/bin/bash /etc/Sigula/startup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
FordServ
 chmod +x /etc/systemd/system/Sigula.service
 systemctl daemon-reload
 systemctl start Sigula
 systemctl enable Sigula &> /dev/null
 systemctl enable fail2ban &> /dev/null
 systemctl start fail2ban &> /dev/null

 # Rebooting cron service
 systemctl restart cron
 systemctl enable cron
 
}
 #Create Admin
 useradd -m admin
 echo "admin:itangsagli" | chpasswd

function ConfMenu(){
echo -e " Creating Menu scripts.."

cd /usr/local/sbin/
rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
wget -q 'https://github.com/raziman869/AutoScriptDB/raw/master/Files/Menu/bashmenu.zip'
unzip -qq bashmenu.zip
rm -f bashmenu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd ~
}

function ScriptMessage(){
 echo -e " [\e[1;32m$MyScriptName VPS Installer\e[0m]"
 echo -e ""
 echo -e " t.me/sigula"
 echo -e " [PAYPAL] huhu86977@gmail.com"
 echo -e ""
}

function InstBadVPN(){
 # Pull BadVPN Binary 64bit or 32bit
if [ "$(getconf LONG_BIT)" == "64" ]; then
 wget -O /usr/bin/badvpn-udpgw "https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/badvpn-udpgw64"
else
 wget -O /usr/bin/badvpn-udpgw "https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/badvpn-udpgw"
fi
 # Set BadVPN to Start on Boot via .profile
 sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300' /root/.profile
 # Change Permission to make it Executable
 chmod +x /usr/bin/badvpn-udpgw
 # Start BadVPN via Screen
 screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300
}


#############################################
#############################################
########## Installation Process##############
#############################################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################################
#############################################

 # Begin Installation by Updating and Upgrading machine and then Installing all our wanted packages/services to be install.
 ScriptMessage
 sleep 2
 InstUpdates
 
 # Configure OpenSSH and Dropbear
 echo -e "Configuring ssh..."
 InstSSH
 
 # Configure Stunnel
 echo -e "Configuring stunnel..."
 InsStunnel
 
 # Configure BadVPN UDPGW
 echo -e "Configuring BadVPN UDPGW..."
 InstBadVPN
 
 # Configure Webmin
 echo -e "Configuring webmin..."
 InstWebmin
 
 # Configure Squid
 echo -e "Configuring proxy..."
 InsProxy
 
 # Configure OpenVPN
 echo -e "Configuring OpenVPN..."
 InsOpenVPN
 
 # Configuring Nginx OVPN config download site
 OvpnConfigs

 # Some assistance and startup scripts
 ConfStartup

 ## DNS maker plugin for SUN users(for vps script usage only)
 wget -qO dnsmaker "https://raw.githubusercontent.com/Bonveio/BonvScripts/master/DNSMaster/debian"
 chmod +x dnsmaker
 ./dnsmaker
 rm -rf dnsmaker
 sed -i "s|http-proxy $IPADDR|http-proxy $(cat /tmp/abonv_mydns)|g" /var/www/openvpn/suntu-dns.ovpn
 sed -i "s|remote $IPADDR|remote $(cat /tmp/abonv_mydns)|g" /var/www/openvpn/sun-tuudp.ovpn
 curl -4sSL "$(cat /tmp/abonv_mydns_domain)" &> /dev/null
 mv /tmp/abonv_mydns /etc/bonveio/my_domain_name
 mv /tmp/abonv_mydns_id /etc/bonveio/my_domain_id
 rm -rf /tmp/abonv*

 # VPS Menu script v1.0
 ConfMenu
 
 # Setting server local time
 ln -fs /usr/share/zoneinfo/$MyVPS_Time /etc/localtime
 
 clear
 cd ~
 
  # Running screenfetch
 wget -O /usr/bin/screenfetch "https://raw.githubusercontent.com/raziman869/AutoScriptDB/master/Files/Plugins/screenfetch"
 chmod +x /usr/bin/screenfetch
 echo "/bin/bash /etc/openvpn/openvpn.bash" >> .profile
 echo "clear" >> .profile
 echo "screenfetch" >> .profile

 
 # Showing script's banner message
 ScriptMessage
 
 # Showing additional information from installating this script
echo " "
echo "Installation has been completed!!"
echo "--------------------------------------------------------------------------------"
echo "                            Debian Premium Script                               "
echo "                                 -SigulaDev-                                   "
echo "--------------------------------------------------------------------------------"
echo ""  | tee -a log-install.txt
echo "Server Information"  | tee -a log-install.txt
echo "   - Timezone    : Asia/Malaysia (GMT +8)"  | tee -a log-install.txt
echo "   - Fail2Ban    : [ON]"  | tee -a log-install.txt
echo "   - IPtables    : [ON]"  | tee -a log-install.txt
echo "   - Auto-Reboot : [ON]"  | tee -a log-install.txt
echo "   - IPv6        : [OFF]"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Application & Port Information"  | tee -a log-install.txt
echo "   - OpenVPN		: TCP $OpenVPN_TCP_Port UDP $OpenVPN_UDP_Port "  | tee -a log-install.txt
echo "   - OpenSSH		: $SSH_Port1, $SSH_Port2 "  | tee -a log-install.txt
echo "   - Dropbear		: $Dropbear_Port1, $Dropbear_Port2"  | tee -a log-install.txt
echo "   - Stunnel/SSL 	: $Stunnel_Port1, $Stunnel_Port2"  | tee -a log-install.txt
echo "   - Squid Proxy	: $Squid_Port1 , $Squid_Port2 (limit to IP Server)"  | tee -a log-install.txt
echo "   - Squid ELITE	: $Squid_Port3 (limit to IP Server)"  | tee -a log-install.txt
echo "   - Privoxy		: $Privoxy_Port1 , $Privoxy_Port2 (limit to IP Server)"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Premium Script Information"  | tee -a log-install.txt
echo "   To display list of commands: menu"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Important Information"  | tee -a log-install.txt
echo "   - Installation Log        : cat /root/log-install.txt"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "   - Webmin                  : http://$IPADDR:10000/"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "OpenVPN Configs Download"  | tee -a log-install.txt
echo "   - Download Link           : http://$IPADDR:85/configs.zip"  | tee -a log-install.txt
echo " Ã‚Â©SigulaDev"  | tee -a log-install.txt
echo " t.me/sigula"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo " This script is under project of https://github.com/raziman869/AutoScriptDB"  | tee -a log-install.txt
echo " Please Reboot your VPS"

 # Clearing all logs from installation
 rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog

rm -f 83*
exit 1
