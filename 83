#!/bin/bash
# Thanks for using this script, Enjoy Highspeed OpenVPN Service

#############################
#############################
# Variables (Can be changed depends on your preferred values)
# Script name
MyScriptName='SigulaDev-Premium Script'

# OpenSSH Ports
SSH_Port1='22'
SSH_Port2='53'
SSH_Port2='80'

# Your SSH Banner
SSH_Banner='https://raw.githubusercontent.com/raziman869/AutoScriptDB/master/Files/Plugins/banner'

# Dropbear Ports
Dropbear_Port1='445'
Dropbear_Port2='442'

# Stunnel Ports
Stunnel_Port1='446' # through Dropbear
Stunnel_Port2='444' # through OpenSSH

# OpenVPN Ports
OpenVPN_TCP_Port='1103'
OpenVPN_UDP_Port='25222'

# Privoxy Ports
Privoxy_Port1='3356'
Privoxy_Port2='8086'

# Squid Ports
Squid_Port1='3128'
Squid_Port2='8080'
Squid_Port3='80'

# OpenVPN Config Download Port
OvpnDownload_Port='85' # Before changing this value, please read this document. It contains all unsafe ports for Google Chrome Browser, please read from line #23 to line #89: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc

# Server local time
MyVPS_Time='Asia/Manila'
#############################


#############################
#############################
## All function used for this script
#############################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################
#############################

function InstUpdates(){
 export DEBIAN_FRONTEND=noninteractive
 apt-get update
 apt-get upgrade -y
 
 # Removing some firewall tools that may affect other services
 apt-get remove --purge ufw firewalld -y

 
 # Installing some important machine essentials
 apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y
 
 # Now installing all our wanted services
 apt-get install dropbear stunnel4 privoxy ca-certificates nginx ruby apt-transport-https lsb-release squid -y

 # Installing all required packages to install Webmin
 apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
 apt-get install shared-mime-info jq fail2ban -y

 
 # Installing a text colorizer
 gem install lolcat

 # Trying to remove obsolette packages after installation
 apt-get autoremove -y
 
 # Installing OpenVPN by pulling its repository inside sources.list file 
 rm -rf /etc/apt/sources.list.d/openvpn*
 echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/openvpn.list
 wget -qO - http://build.openvpn.net/debian/openvpn/stable/pubkey.gpg|apt-key add -
 apt-get update
 apt-get install openvpn -y
}

function InstWebmin(){
 # Download the webmin .deb package
 # You may change its webmin version depends on the link you've loaded in this variable(.deb file only, do not load .zip or .tar.gz file):
 WebminFile='https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/webmin_1.920_all.deb'
 wget -qO webmin.deb "$WebminFile"
 
 # Installing .deb package for webmin
 dpkg --install webmin.deb
 
 rm -rf webmin.deb
 
 # Configuring webmin server config to use only http instead of https
 sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf
 
 # Then restart to take effect
 systemctl restart webmin
}

function InstSSH(){
 # Removing some duplicated sshd server configs
 rm -f /etc/ssh/sshd_config*
 
 # Creating a SSH server config using cat eof tricks
 cat <<'MySSHConfig' > /etc/ssh/sshd_config
# My OpenSSH Server config
Port myPORT1
Port myPORT2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 240
ClientAliveCountMax 2
UseDNS no
Banner /etc/banner
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server
MySSHConfig

 # Now we'll put our ssh ports inside of sshd_config
 sed -i "s|myPORT1|$SSH_Port1|g" /etc/ssh/sshd_config
 sed -i "s|myPORT2|$SSH_Port2|g" /etc/ssh/sshd_config

 # Download our SSH Banner
 rm -f /etc/banner
 wget -qO /etc/banner "$SSH_Banner"
 dos2unix -q /etc/banner

 # My workaround code to remove `BAD Password error` from passwd command, it will fix password-related error on their ssh accounts.
 sed -i '/password\s*requisite\s*pam_cracklib.s.*/d' /etc/pam.d/common-password
 sed -i 's/use_authtok //g' /etc/pam.d/common-password

 # Some command to identify null shells when you tunnel through SSH or using Stunnel, it will fix user/pass authentication error on HTTP Injector, KPN Tunnel, eProxy, SVI, HTTP Proxy Injector etc ssh/ssl tunneling apps.
 sed -i '/\/bin\/false/d' /etc/shells
 sed -i '/\/usr\/sbin\/nologin/d' /etc/shells
 echo '/bin/false' >> /etc/shells
 echo '/usr/sbin/nologin' >> /etc/shells
 
 # Restarting openssh service
 systemctl restart ssh
 
 # Removing some duplicate config file
 rm -rf /etc/default/dropbear*
 
 # creating dropbear config using cat eof tricks
 cat <<'MyDropbear' > /etc/default/dropbear
# My Dropbear Config
NO_START=0
DROPBEAR_PORT=PORT01
DROPBEAR_EXTRA_ARGS="-p PORT02"
DROPBEAR_BANNER="/etc/banner"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
MyDropbear

 # Now changing our desired dropbear ports
 sed -i "s|PORT01|$Dropbear_Port1|g" /etc/default/dropbear
 sed -i "s|PORT02|$Dropbear_Port2|g" /etc/default/dropbear
 
 # Restarting dropbear service
 systemctl restart dropbear
}

function InsStunnel(){
 StunnelDir=$(ls /etc/default | grep stunnel | head -n1)

 # Creating stunnel startup config using cat eof tricks
cat <<'MyStunnelD' > /etc/default/$StunnelDir
# My Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/banner"
PPP_RESTART=0
# RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
MyStunnelD

 # Removing all stunnel folder contents
 rm -rf /etc/stunnel/*
 
 # Creating stunnel certifcate using openssl
 openssl req -new -x509 -days 9999 -nodes -subj "/C=PH/ST=NCR/L=Manila/O=$MyScriptName/OU=$MyScriptName/CN=$MyScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem &> /dev/null
##  > /dev/null 2>&1

 # Creating stunnel server config
 cat <<'MyStunnelC' > /etc/stunnel/stunnel.conf
# My Stunnel Config
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0

[dropbear]
accept = Stunnel_Port1
connect = 127.0.0.1:dropbear_port_c

[openssh]
accept = Stunnel_Port2
connect = 127.0.0.1:openssh_port_c

[openssh]
accept = 587
connect = 127.0.0.1:1103
MyStunnelC

 # setting stunnel ports
 sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /etc/stunnel/stunnel.conf
 sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
 sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /etc/stunnel/stunnel.conf
 sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf

 # Restarting stunnel service
 systemctl restart $StunnelDir

}

function InsOpenVPN(){
 # Checking if openvpn folder is accidentally deleted or purged
 if [[ ! -e /etc/openvpn ]]; then
  mkdir -p /etc/openvpn
 fi

 # Removing all existing openvpn server files
 rm -rf /etc/openvpn/*

 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf' > /etc/openvpn/server_tcp.conf
# OpenVPN TCP
port OVPNTCP
proto tcp
dev tun
dev-type tun
sndbuf 100000
rcvbuf 100000
crl-verify crl.pem
ca ca.crt
cert server.crt
key server.key
tls-auth tls-auth.key 0
dh dh.pem
topology subnet
server 10.9.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
comp-lzo
user nobody
group nogroup
persist-tun
status openvpn-status.log
verb 2
mute 3
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
verify-client-cert none
username-as-common-name
myOpenVPNconf

cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# OpenVPN UDP
port OVPNUDP
dev tun
proto udp
crl-verify crl.pem
ca ca.crt
cert server.crt
key server.key
# tls-auth tls-auth.key 0
dh dh.pem
verify-client-cert none
username-as-common-name
key-direction 0
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.201.0.0 255.255.0.0
ifconfig-pool-persist ipp.txt
push "route-method exe"
push "route-delay 2"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log udp.log
verb 2
ncp-disable
cipher none
auth none
myOpenVPNconf2

 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIE1jCCA76gAwIBAgIJAOkmYToBCqwbMA0GCSqGSIb3DQEBBQUAMIGiMQswCQYD
VQQGEwJVUzELMAkGA1UECBMCQ0ExFTATBgNVBAcTDFNhbkZyYW5jaXNjbzEVMBMG
A1UEChMMRm9ydC1GdW5zdG9uMREwDwYDVQQLEwhjaGFuZ2VtZTERMA8GA1UEAxMI
Y2hhbmdlbWUxETAPBgNVBCkTCGNoYW5nZW1lMR8wHQYJKoZIhvcNAQkBFhBtYWls
QGhvc3QuZG9tYWluMB4XDTE2MDYyMTIwNDA1NloXDTI2MDYxOTIwNDA1NlowgaIx
CzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMMU2FuRnJhbmNpc2Nv
MRUwEwYDVQQKEwxGb3J0LUZ1bnN0b24xETAPBgNVBAsTCGNoYW5nZW1lMREwDwYD
VQQDEwhjaGFuZ2VtZTERMA8GA1UEKRMIY2hhbmdlbWUxHzAdBgkqhkiG9w0BCQEW
EG1haWxAaG9zdC5kb21haW4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQDKDg5grS74BDNB3ExuDD1DVbkePwHWyGbiM0ghUmAghL6gbCD2RkBu/I6SLPjm
O8YXcRdPzjtvc6P5iFJB74rOJY5hmd5eocsh0zG/uJmXP79uNEVHHhnimEGWyG3u
+1u5VArzpVXabIM8S3jL3i3+IpADQTDbh8LaEy7vzrCIhKBBMeyaNMIXYtl3K+Yk
NnccjK1GEBdw1w+DjIFmECztL6uREaTvw/34sxpyDlreROoHqH/beEgcK73EE0VK
R7DvlvAdEf+FlmGh5r9+cBIWuxGuENXoC6XYe5sw6CO2Re7aWy/5l9lBYmZLzgwg
FIV/imye4gHzNGK9zgEuzpoFAgMBAAGjggELMIIBBzAdBgNVHQ4EFgQUm4usLcDJ
3ujxZQ5SKowe9aHb5oIwgdcGA1UdIwSBzzCBzIAUm4usLcDJ3ujxZQ5SKowe9aHb
5oKhgaikgaUwgaIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMM
U2FuRnJhbmNpc2NvMRUwEwYDVQQKEwxGb3J0LUZ1bnN0b24xETAPBgNVBAsTCGNo
YW5nZW1lMREwDwYDVQQDEwhjaGFuZ2VtZTERMA8GA1UEKRMIY2hhbmdlbWUxHzAd
BgkqhkiG9w0BCQEWEG1haWxAaG9zdC5kb21haW6CCQDpJmE6AQqsGzAMBgNVHRME
BTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAeaxooDayADQsMzX8VKURTrSxKwllX
fQ8YAVI54E9u/hlAEyajExCa2dCsfL06a2qGz4h+jjPeqAa3VlkyMvU7Fy+VY/Wo
tJjKkS6iCd2wqm/mglCpbXqDxdlkxOS4Fm5VPLPT7jKxqceEbNh5c3rqLayPUzth
lcAb6CZgDeGrmhr4qnDISTiVucGxYqRQY8UopL2gBrC+OcIxlAawZn9oyJkKNL0x
H7SR4nuIbJe70RYzutDWbROE3kCtF8H5MgfLyT2mWP3NJ60hKCT9ZHxdIv2q1rBP
eo8l1xE8BNg53yrTzSeNowHjj01m9fe2zGhlxtp83C4IyMDTGb0k+kiC
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/client.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 2 (0x2)
    Signature Algorithm: sha1WithRSAEncryption
        Issuer: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=changeme/name=changeme/emailAddress=mail@host.domain
        Validity
            Not Before: Jun 21 20:40:57 2016 GMT
            Not After : Jun 19 20:40:57 2026 GMT
        Subject: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=client/name=changeme/emailAddress=mail@host.domain
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c4:06:2b:41:46:00:11:ca:42:37:c8:08:e3:31:
                    1c:fc:68:98:3c:db:48:b6:a7:6d:d1:4d:9e:a6:1f:
                    0d:37:d7:c9:6d:df:95:72:90:4c:9a:d0:61:e2:11:
                    40:82:3d:45:4b:7e:ac:4c:5b:50:cf:31:61:26:7d:
                    16:ba:08:da:db:af:9e:fa:b8:ee:88:8e:68:68:d8:
                    af:8f:40:d8:46:f9:49:6b:f8:59:69:6e:8a:2f:f3:
                    56:6b:1b:4f:a2:e0:50:90:6d:51:38:b5:fa:4f:bd:
                    ce:d5:46:fd:9a:2a:8f:98:2f:3c:4d:e3:3a:9e:7e:
                    46:9c:24:01:65:91:e1:20:bd:15:cf:bd:f8:bc:49:
                    39:c1:40:e7:63:2e:27:b2:eb:1b:5c:48:83:a0:73:
                    55:df:fc:2b:9b:46:75:90:92:05:db:f5:ee:b3:36:
                    96:25:22:72:93:48:ca:79:bd:8d:3b:11:a8:5c:a8:
                    21:b3:1a:80:9a:fe:2b:06:90:51:2b:c3:c6:7d:95:
                    39:d5:c4:c0:48:76:19:1a:68:bd:ec:6b:7b:4b:e3:
                    31:ab:95:5b:7e:ed:e1:2b:30:a6:ba:70:b6:88:12:
                    dc:e3:53:e4:21:d2:dc:f5:78:8b:f2:41:73:47:8d:
                    75:4f:c4:40:b9:17:fa:37:8d:a6:81:f1:02:de:ad:
                    c9:37
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Comment: 
                Easy-RSA Generated Certificate
            X509v3 Subject Key Identifier: 
                96:43:6F:58:A0:CB:00:69:35:C7:A4:6F:53:BE:98:31:10:5C:73:43
            X509v3 Authority Key Identifier: 
                keyid:9B:8B:AC:2D:C0:C9:DE:E8:F1:65:0E:52:2A:8C:1E:F5:A1:DB:E6:82
                DirName:/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=changeme/CN=changeme/name=changeme/emailAddress=mail@host.domain
                serial:E9:26:61:3A:01:0A:AC:1B

            X509v3 Extended Key Usage: 
                TLS Web Client Authentication
            X509v3 Key Usage: 
                Digital Signature
    Signature Algorithm: sha1WithRSAEncryption
         b9:81:2d:a6:2a:6f:27:54:d9:2b:3b:46:07:cb:68:bf:cc:77:
         e4:86:73:9c:fd:fa:2c:30:54:28:09:3c:b9:ab:88:6d:76:15:
         08:2f:e0:82:d3:07:a6:26:d1:53:31:4f:44:aa:c9:b2:9d:47:
         17:59:d7:a2:89:cd:88:72:a8:6f:9f:c0:11:72:f2:77:79:41:
         46:d5:86:06:f5:7a:7b:ce:ae:2d:fe:13:4e:7f:68:58:ff:a9:
         aa:67:b1:66:88:8f:1b:ab:a3:86:2d:65:95:4f:81:93:69:6c:
         a8:5d:ab:cf:df:7f:ce:c1:e7:b5:97:63:dc:d1:8d:7c:1f:ec:
         e8:1a:aa:8e:aa:07:61:56:2b:2f:39:2d:ba:fd:26:dc:69:4b:
         93:8c:b4:7b:f5:0c:63:64:d1:68:eb:78:87:c9:92:74:59:79:
         26:df:01:a4:bf:ba:46:cf:e2:71:62:20:fa:34:05:b7:db:23:
         96:03:8f:05:a3:e6:1e:ba:7e:37:dd:dd:10:6d:cd:e6:e1:a9:
         44:ca:c5:27:cb:64:1f:17:f6:b7:97:f6:46:06:e6:4d:cf:67:
         63:1f:c8:cd:da:3d:e0:73:37:05:18:a8:b9:2b:e4:c9:22:85:
         e7:99:44:dd:2f:1b:a6:eb:22:43:d6:04:dc:92:83:b1:fa:01:
         26:07:37:ab
-----BEGIN CERTIFICATE-----
MIIFGjCCBAKgAwIBAgIBAjANBgkqhkiG9w0BAQUFADCBojELMAkGA1UEBhMCVVMx
CzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxTYW5GcmFuY2lzY28xFTATBgNVBAoTDEZv
cnQtRnVuc3RvbjERMA8GA1UECxMIY2hhbmdlbWUxETAPBgNVBAMTCGNoYW5nZW1l
MREwDwYDVQQpEwhjaGFuZ2VtZTEfMB0GCSqGSIb3DQEJARYQbWFpbEBob3N0LmRv
bWFpbjAeFw0xNjA2MjEyMDQwNTdaFw0yNjA2MTkyMDQwNTdaMIGgMQswCQYDVQQG
EwJVUzELMAkGA1UECBMCQ0ExFTATBgNVBAcTDFNhbkZyYW5jaXNjbzEVMBMGA1UE
ChMMRm9ydC1GdW5zdG9uMREwDwYDVQQLEwhjaGFuZ2VtZTEPMA0GA1UEAxMGY2xp
ZW50MREwDwYDVQQpEwhjaGFuZ2VtZTEfMB0GCSqGSIb3DQEJARYQbWFpbEBob3N0
LmRvbWFpbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMQGK0FGABHK
QjfICOMxHPxomDzbSLanbdFNnqYfDTfXyW3flXKQTJrQYeIRQII9RUt+rExbUM8x
YSZ9FroI2tuvnvq47oiOaGjYr49A2Eb5SWv4WWluii/zVmsbT6LgUJBtUTi1+k+9
ztVG/Zoqj5gvPE3jOp5+RpwkAWWR4SC9Fc+9+LxJOcFA52MuJ7LrG1xIg6BzVd/8
K5tGdZCSBdv17rM2liUicpNIynm9jTsRqFyoIbMagJr+KwaQUSvDxn2VOdXEwEh2
GRpovexre0vjMauVW37t4SswprpwtogS3ONT5CHS3PV4i/JBc0eNdU/EQLkX+jeN
poHxAt6tyTcCAwEAAaOCAVkwggFVMAkGA1UdEwQCMAAwLQYJYIZIAYb4QgENBCAW
HkVhc3ktUlNBIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUlkNvWKDL
AGk1x6RvU76YMRBcc0MwgdcGA1UdIwSBzzCBzIAUm4usLcDJ3ujxZQ5SKowe9aHb
5oKhgaikgaUwgaIxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMM
U2FuRnJhbmNpc2NvMRUwEwYDVQQKEwxGb3J0LUZ1bnN0b24xETAPBgNVBAsTCGNo
YW5nZW1lMREwDwYDVQQDEwhjaGFuZ2VtZTERMA8GA1UEKRMIY2hhbmdlbWUxHzAd
BgkqhkiG9w0BCQEWEG1haWxAaG9zdC5kb21haW6CCQDpJmE6AQqsGzATBgNVHSUE
DDAKBggrBgEFBQcDAjALBgNVHQ8EBAMCB4AwDQYJKoZIhvcNAQEFBQADggEBALmB
LaYqbydU2Ss7RgfLaL/Md+SGc5z9+iwwVCgJPLmriG12FQgv4ILTB6Ym0VMxT0Sq
ybKdRxdZ16KJzYhyqG+fwBFy8nd5QUbVhgb1envOri3+E05/aFj/qapnsWaIjxur
o4YtZZVPgZNpbKhdq8/ff87B57WXY9zRjXwf7Ogaqo6qB2FWKy85Lbr9JtxpS5OM
tHv1DGNk0WjreIfJknRZeSbfAaS/ukbP4nFiIPo0BbfbI5YDjwWj5h66fjfd3RBt
zebhqUTKxSfLZB8X9reX9kYG5k3PZ2MfyM3aPeBzNwUYqLkr5MkiheeZRN0vG6br
IkPWBNySg7H6ASYHN6s=
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/client.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEBitBRgARykI3
yAjjMRz8aJg820i2p23RTZ6mHw0318lt35VykEya0GHiEUCCPUVLfqxMW1DPMWEm
fRa6CNrbr576uO6Ijmho2K+PQNhG+Ulr+Flpboov81ZrG0+i4FCQbVE4tfpPvc7V
Rv2aKo+YLzxN4zqefkacJAFlkeEgvRXPvfi8STnBQOdjLiey6xtcSIOgc1Xf/Cub
RnWQkgXb9e6zNpYlInKTSMp5vY07EahcqCGzGoCa/isGkFErw8Z9lTnVxMBIdhka
aL3sa3tL4zGrlVt+7eErMKa6cLaIEtzjU+Qh0tz1eIvyQXNHjXVPxEC5F/o3jaaB
8QLerck3AgMBAAECggEATziHBqw5nvb06AJJxTe2FTRYQlAFBPyJX0tVUKG//8+P
sn3nshMrQm3xASIjxf7pIGejToChGftE3f8zzh+CA8LoJz/R9xJGlAjueqCkR5q7
14zY5cksw9A+Hq888gBhzty/NIInFU8KZht4pnOI8OI2JuwsZp11/+h1QA1CxK2v
uOSBjLcxD5dWbKrmh77rPxHfIOFnYD/WyXhD8RCnHRh5aedTPAHkdHhrs5A+Y8MF
cVjJi8VpeN6IWLYH6OvrLlvgL3PF2W8IM8UbZ5/HAvAsvpm6J4XWXarRSx4nU9U5
d1dtW2jGHadBAY/H6pLUzvjLe9HK/R+KGSQnrK0e0QKBgQD+Xaf1O/FeLpICsfsO
ETMhiXwIWkirut0El/8+5e3crnpknB/gWkVK7ZX7FaRhD+hqeMvT+utRrY4T/ol7
WZ7QNUraTQ842GZrtqJoso6hBxgdwnIrJhJQ62gVmhP+ZpBFI8r7Y/W8SJw7dJhN
5SoTpsGMzoJiSE9AaEYoqZCvnQKBgQDFSI+U9H7tgSpcLUW0SuOnfjIVS8R6iUOB
AVDJvjfARVw81wm/VDz5WJkeG1s/CRsKiyETFU/IWssHyVogWhTWyiBcmipVYNHm
KDQQPv5J/qsbgBGv4Xg99kaTgTc2f2A/l++0WL4CZhiU/e70iBOM8bLmcQnIvIOh
a6DUv4QF4wKBgGeIUVvE2Tp/dBi6vrf8Eja9UgnITbnwZhN/lnnQdp+TOOgIkATu
WTPlPl2jcnO7WNs1balLgUqOfLzwpp7ZXIXcmyn9oYt+sTl4beR1gQ5T5+H9CiE7
7sqW9peMTkUHFAPATNdD2XqYh1a/31odQ6IaBr+8Ml+0lOVfS+czFVwVAoGAGbg7
/89gPNZ6D0pXrAmXZF6vaNdX5iG/CzKAtcx2uDpSrBvcyXTR/i/uxl4Kp00omVdK
GJLOs/AiSAGYHl+gF+CCF5CBtF/K/ZaAMx4DSOJKrGsl4ygh5PIWgWR3LkOs6J2G
QpzPKMDms4XngTm8UsOv7xsNi34IKyM89H+DVsECgYEAvUD/ou/jW77TxPmalI1Y
JKsoOihYh9dytJKyelQcCU+K3Dlyl2rNRnGEDJBT39hPQ/WvvL28IkGeHyNE5F+I
sUB+Yx4tpMhPI/4d1aGZQcGmwfcbP9fzOGOdiQD/82Qg5D5Npuwk2Z0Il8LmxWEB
o3YdDzxYQLBizpEFu+rU1A4=
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF18'> /etc/openvpn/tls-auth.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
bc9d409e9a4df82007b978554f6bc974
b360b2ff4f6d00ab0756b5df091d59e2
f349b570c670b618755d8afeb54bbb6e
2b9c78c08e2eb77d7d14a445d90cb59c
ecd86a1c0c37c065cd88116a482310d8
443fd165fe89ce0632823a09e6eb601b
58144f16288426c10790d23f2a64c704
7a3d935e5d72c9cc0e8ae9dfe8d6aba7
9e14e8852757410836d05adaa82c227c
3bf1a2e3f81fbcb7cae591c43ddd4f55
3a2531faff9826fabb658fe9f4932857
ad8a3fb591b103280dab6de8700810b6
1f02645ae953b08e5f6c8fe107ac84ad
fdd665b9706c06d6f053bbb68cfcef55
afb0eff582231b8d7c640d85b6981b1f
f9ad3c476af859c708825b5212cc94df
-----END OpenVPN Static key V1-----
EOF18
 cat <<'EOF107'> /etc/openvpn/server.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 1 (0x1)
    Signature Algorithm: sha1WithRSAEncryption
        Issuer: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=changeme/name=changeme/emailAddress=mail@host.domain
        Validity
            Not Before: Jun 21 20:40:56 2016 GMT
            Not After : Jun 19 20:40:56 2026 GMT
        Subject: C=US, ST=CA, L=SanFrancisco, O=Fort-Funston, OU=changeme, CN=changeme/name=changeme/emailAddress=mail@host.domain
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:9e:df:5b:1b:96:7d:35:09:59:30:5b:2e:1f:cf:
                    27:a6:4c:9f:8d:29:55:74:bf:6d:7f:5a:00:8f:ce:
                    39:66:c8:68:fb:3d:3e:54:1d:b0:b3:7c:92:83:4c:
                    ad:e6:bf:16:12:66:42:b3:c8:7a:91:35:69:6d:1b:
                    3b:bc:7a:f2:3a:0b:81:fa:47:05:8b:3a:ac:ed:64:
                    5f:0f:a3:80:b9:0b:3c:ea:d8:e0:f1:1f:70:ae:d8:
                    6c:e8:71:78:5d:de:6a:d8:72:6e:03:58:f7:2e:63:
                    f3:b1:40:29:45:64:94:4b:1b:c3:28:4c:74:01:59:
                    db:56:ee:2b:7f:4f:cc:c5:d7:4e:7a:6a:2d:29:e0:
                    90:64:48:ff:a4:62:79:35:24:82:15:9d:73:8c:e2:
                    8f:0e:0a:df:d0:04:70:c3:6f:67:c5:83:12:bf:1d:
                    ad:0a:52:94:d2:ab:4e:71:93:c3:13:6a:8a:c6:e6:
                    6e:78:ac:62:18:db:58:c4:3f:27:13:ee:4b:a5:f0:
                    bc:1f:09:24:28:25:fb:fa:0d:f1:2b:90:d9:86:c6:
                    44:c8:0e:a5:dd:8e:cb:2e:a7:62:71:17:9e:96:23:
                    05:f9:42:73:f2:8c:5b:3e:19:62:00:5f:02:25:98:
                    43:ed:e3:31:4a:15:04:e8:ca:df:a5:14:cb:9a:41:
                    cf:4b
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            Netscape Cert Type: 
                SSL Server
            Netscape Comment: 
                Easy-RSA Generated Server Certificate
            X509v3 Subject Key Identifier: 
                F1:45:3A:8B:B1:03:D2:3C:54:9F:C6:5D:D6:87:F8:BF:69:96:9D:E3
            X509v3 Authority Key Identifier: 
                keyid:9B:8B:AC:2D:C0:C9:DE:E8:F1:65:0E:52:2A:8C:1E:F5:A1:DB:E6:82
                DirName:/C=US/ST=CA/L=SanFrancisco/O=Fort-Funston/OU=changeme/CN=changeme/name=changeme/emailAddress=mail@host.domain
                serial:E9:26:61:3A:01:0A:AC:1B

            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
    Signature Algorithm: sha1WithRSAEncryption
         6e:a3:66:1a:24:dc:c1:b9:42:96:da:9c:b0:17:99:61:98:45:
         10:a5:db:6d:0e:e0:1a:64:a6:1e:1b:8c:e8:a9:76:ed:20:38:
         a1:b9:b4:f8:9b:5f:ed:2d:b3:d9:d9:11:1f:67:de:0b:37:42:
         59:93:cf:11:cf:68:b0:d4:aa:2f:50:13:44:68:e1:fc:59:1c:
         6c:86:43:dc:00:79:00:34:c9:39:56:1e:07:77:15:67:fd:f1:
         33:dd:8b:f5:b5:11:9c:61:68:95:cb:67:9b:8c:67:83:58:9c:
         df:57:a8:ca:14:59:b7:2e:29:d2:91:be:72:da:bb:91:b4:7d:
         6f:3b:59:22:10:8f:04:56:e8:2c:c6:71:c3:37:79:e0:08:8f:
         58:82:87:b7:c1:cc:62:86:60:21:a5:66:39:58:d5:c6:d6:a2:
         a7:8e:98:ba:19:06:78:a5:9d:ea:d9:6e:08:3c:d5:95:fc:78:
         48:31:52:37:45:02:17:c1:a6:26:37:b2:eb:40:ac:d9:23:75:
         5a:3c:27:89:e9:97:43:be:f4:0b:bb:7b:48:17:f2:52:64:71:
         a0:05:c3:02:8e:56:a9:41:d6:1a:46:c0:e9:12:4f:91:20:f9:
         12:ef:b0:85:72:0f:b4:d2:ad:4e:96:51:35:4a:c6:7e:4e:dc:
         d3:75:98:d2
-----BEGIN CERTIFICATE-----
MIIFNjCCBB6gAwIBAgIBATANBgkqhkiG9w0BAQUFADCBojELMAkGA1UEBhMCVVMx
CzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxTYW5GcmFuY2lzY28xFTATBgNVBAoTDEZv
cnQtRnVuc3RvbjERMA8GA1UECxMIY2hhbmdlbWUxETAPBgNVBAMTCGNoYW5nZW1l
MREwDwYDVQQpEwhjaGFuZ2VtZTEfMB0GCSqGSIb3DQEJARYQbWFpbEBob3N0LmRv
bWFpbjAeFw0xNjA2MjEyMDQwNTZaFw0yNjA2MTkyMDQwNTZaMIGiMQswCQYDVQQG
EwJVUzELMAkGA1UECBMCQ0ExFTATBgNVBAcTDFNhbkZyYW5jaXNjbzEVMBMGA1UE
ChMMRm9ydC1GdW5zdG9uMREwDwYDVQQLEwhjaGFuZ2VtZTERMA8GA1UEAxMIY2hh
bmdlbWUxETAPBgNVBCkTCGNoYW5nZW1lMR8wHQYJKoZIhvcNAQkBFhBtYWlsQGhv
c3QuZG9tYWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnt9bG5Z9
NQlZMFsuH88npkyfjSlVdL9tf1oAj845Zsho+z0+VB2ws3ySg0yt5r8WEmZCs8h6
kTVpbRs7vHryOguB+kcFizqs7WRfD6OAuQs86tjg8R9wrths6HF4Xd5q2HJuA1j3
LmPzsUApRWSUSxvDKEx0AVnbVu4rf0/MxddOemotKeCQZEj/pGJ5NSSCFZ1zjOKP
Dgrf0ARww29nxYMSvx2tClKU0qtOcZPDE2qKxuZueKxiGNtYxD8nE+5LpfC8Hwkk
KCX7+g3xK5DZhsZEyA6l3Y7LLqdicReeliMF+UJz8oxbPhliAF8CJZhD7eMxShUE
6MrfpRTLmkHPSwIDAQABo4IBczCCAW8wCQYDVR0TBAIwADARBglghkgBhvhCAQEE
BAMCBkAwNAYJYIZIAYb4QgENBCcWJUVhc3ktUlNBIEdlbmVyYXRlZCBTZXJ2ZXIg
Q2VydGlmaWNhdGUwHQYDVR0OBBYEFPFFOouxA9I8VJ/GXdaH+L9plp3jMIHXBgNV
HSMEgc8wgcyAFJuLrC3Ayd7o8WUOUiqMHvWh2+aCoYGopIGlMIGiMQswCQYDVQQG
EwJVUzELMAkGA1UECBMCQ0ExFTATBgNVBAcTDFNhbkZyYW5jaXNjbzEVMBMGA1UE
ChMMRm9ydC1GdW5zdG9uMREwDwYDVQQLEwhjaGFuZ2VtZTERMA8GA1UEAxMIY2hh
bmdlbWUxETAPBgNVBCkTCGNoYW5nZW1lMR8wHQYJKoZIhvcNAQkBFhBtYWlsQGhv
c3QuZG9tYWluggkA6SZhOgEKrBswEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0P
BAQDAgWgMA0GCSqGSIb3DQEBBQUAA4IBAQBuo2YaJNzBuUKW2pywF5lhmEUQpdtt
DuAaZKYeG4zoqXbtIDihubT4m1/tLbPZ2REfZ94LN0JZk88Rz2iw1KovUBNEaOH8
WRxshkPcAHkANMk5Vh4HdxVn/fEz3Yv1tRGcYWiVy2ebjGeDWJzfV6jKFFm3LinS
kb5y2ruRtH1vO1kiEI8EVugsxnHDN3ngCI9Ygoe3wcxihmAhpWY5WNXG1qKnjpi6
GQZ4pZ3q2W4IPNWV/HhIMVI3RQIXwaYmN7LrQKzZI3VaPCeJ6ZdDvvQLu3tIF/JS
ZHGgBcMCjlapQdYaRsDpEk+RIPkS77CFcg+00q1OllE1SsZ+TtzTdZjS
-----END CERTIFICATE-----
EOF107
 cat <<'EOF113'> /etc/openvpn/server.key
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCe31sbln01CVkw
Wy4fzyemTJ+NKVV0v21/WgCPzjlmyGj7PT5UHbCzfJKDTK3mvxYSZkKzyHqRNWlt
Gzu8evI6C4H6RwWLOqztZF8Po4C5Czzq2ODxH3Cu2GzocXhd3mrYcm4DWPcuY/Ox
QClFZJRLG8MoTHQBWdtW7it/T8zF1056ai0p4JBkSP+kYnk1JIIVnXOM4o8OCt/Q
BHDDb2fFgxK/Ha0KUpTSq05xk8MTaorG5m54rGIY21jEPycT7kul8LwfCSQoJfv6
DfErkNmGxkTIDqXdjssup2JxF56WIwX5QnPyjFs+GWIAXwIlmEPt4zFKFQToyt+l
FMuaQc9LAgMBAAECggEAJsZGmy4YcuhML0Qhtru9ZpYO3sn2xF6wH8PcnTxswAwr
qx3gZ3EznirKK2d8jfOXNHhm0TAd0fDiQTHDW5X6JnaGi4nn7XotmGbF2LBEC2WV
wY+bHt5YhyPlOLnw8aAGHbuX5BNDiLv2Tw1kxT3t/4LQF7bJHUdMBCRu00yroqEu
W1j4gk+rve3HGDkw3fBHGuMiudzUIJM11pPzGOHtvTkvlPrHYquz3m38VmgNfkCy
K0fYjMfXfEIbXh91J0Bp0MUEd7mC4YqflsXuuId7mbg5E43CZLLTHSWJU3Bb87/1
r2ueVBBmGYG+QWj/sbXv8MH8je3nPrE/RSriVmMTGQKBgQDOZyrsFkGylO0bDyZK
TqTXPZ6B2L5Q36qc757096NS+NlY1LvPtpjpS2NxaK2Sisavm+rZ1bb8UvyzCW40
UHcjV8ldalC8QUujCh1qFFHjDwnpOeNaodAy3Xvx6QZip9UrdUtiQp6jlP3Jpg7z
5ZrTrrEe4jb48zdchHW6B9O5rQKBgQDFDFwU3cbgyxfjJHmsSBAYhft+Ro/9HUb7
k+FBZYJBmFPtMWQE9tjKhyvHQv238nple8aXPD+LYhGtZHjWGm11FA7tL8RiSH3J
1IfY2lwS460j4KVAug1wSf0xjV65XD5vDURkraDTp6NKEeLR4j0UdorEQTEkU0sr
ksxvSv471wKBgQCFFa5uVZd831vW07jbtsPA6UFX9foYyW8IC9VRnI8Zw8zY4ypK
LzF/U5XGHTm1wHeF6aHPXWbEYXoAsvb1EmEPT95NtmxiRjPP54i5ympWXm8Ei8fV
u3o0Ie12OMteN1tSzymRLOV/EmVlbQY9KvHexcf84t2RPbmXlO0Xy04wbQKBgGmt
s0TNnHe69Fixmz+2dktwr+yNU3PgW81ZBhnYov8i/v/a2VWAPcyAqg3387LPrKz4
sQ0zFrFeKzTfCZ9qFQIRe9/hGmXLkwrHnQPEOFU5HgZ72KTaI5LxW4VT2FV5D1Ln
vqJwLCzXX0++P/NobnGnEc0nWX+t3EbGODYH9kmJAoGAE8eiFS6EfeGMiqipw7vY
I6RDB9XbHNFK9cAiwYep0CnA6rtiKF40Aqt8HVHeoZFJn4sx5Udl+6Q2KxkzQai6
MHpjKnX30oXc7321jgGFZBSZW3Gc3N5KYviFpO0sBVW70+srig8KcQRxdl9HyZNL
DC20WLzwswi9mNhJespj1EI=
-----END PRIVATE KEY-----
EOF113
 cat <<'EOF13'> /etc/openvpn/dh.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAgiEkbukG/coN8XTfHzbcALkimBRY6f2PThcyJK4pRTcvglbIxTf1
dQOVrB1Vq4zbVXH2Y/oTnQLntR1xPBszg36HaY24zQe0TrCuBio3dPadHq9gzi8O
sGyxwTCS9j+nzdHYf+kllZG+vM0shykVqzoxZAYVOU8RRURioTjHQ1Cmj1okcivf
HVuLAau24Qax1gTCxE9nhF66UrzFycHSdpBekuz+QOiSAKQx9GitsFxddDrpOzJG
yc3TZEyejT1rfGZpyF0Hec4/50NET2N2+bXCrKJCZst1C/nnreqD0wsBuyOMd5dN
U+7EdpII0zw1JG8H+IwzsgqSxPsuDi3mywIBAg==
-----END DH PARAMETERS-----
EOF13
 cat <<'EOF103'> /etc/openvpn/crl.pem
-----BEGIN X509 CRL-----
MIIBvDCBpQIBATANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA52cG4uZjVsYWJz
LmRldhcNMjEwMTE0MDI1MTIzWhcNMzEwMTEyMDI1MTIzWqBYMFYwVAYDVR0jBE0w
S4AU/Ga3V1iPk7I6YR5DeNQuQ+9e5DWhHaQbMBkxFzAVBgNVBAMMDnZwbi5mNWxh
YnMuZGV2ghRRnHaHIWPU0/8eVLJ7jd8THvVqrDANBgkqhkiG9w0BAQsFAAOCAQEA
qv7+B4WNPqRI4WAiTnCtE/vQlQeKnn39NvDEbjfpJjNZAadQxaTeYtO58TOCu5R4
qwF42g0E2mUQvwUEmUeVulnDjEz5e6KOkgllWsrZGwlUObuKNNKrCHqvXxbH/rHk
76/4Jfu7IvqTk4a9c+MV5r5eSA7plRzdJhqgkBWCmD/46UlP2imkgNGg4FeAamuc
kiLEVXPwjRK30L3uUcWXzvXmXtLlvaadPHKPS5YA41WKS0xZ9iELIz0eUHXl8pgd
jrZFH4tMHWZ+mBTRA/76xsbBGWtkxND932g1vAc281EHv9+4iyW1SdvUTJNzZObh
6GJJ6ESQE6h3vJJpVeoFCg==
-----END X509 CRL-----
EOF103

 # Getting all dns inside resolv.conf then use as Default DNS for our openvpn server
 grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_tcp.conf
done

 # Creating a New update message in server.conf
 cat <<'NUovpn' > /etc/openvpn/server.conf
 # New Update are now released, OpenVPN Server
 # are now running both TCP and UDP Protocol. (Both are only running on IPv4)
 # But our native server.conf are now removed and divided
 # Into two different configs base on their Protocols:
 #  * OpenVPN TCP (located at /etc/openvpn/server_tcp.conf
 #  * OpenVPN UDP (located at /etc/openvpn/server_udp.conf
 # 
 # Also other logging files like
 # status logs and server logs
 # are moved into new different file names:
 #  * OpenVPN TCP Server logs (/etc/openvpn/tcp.log)
 #  * OpenVPN UDP Server logs (/etc/openvpn/udp.log)
 #  * OpenVPN TCP Status logs (/etc/openvpn/tcp_stats.log)
 #  * OpenVPN UDP Status logs (/etc/openvpn/udp_stats.log)
 #
 # Server ports are configured base on env vars
 # executed/raised from this script (OpenVPN_TCP_Port/OpenVPN_UDP_Port)
 #
 # Enjoy the new update
 # Script Updated by SigulaDev
NUovpn

 # setting openvpn server port
 sed -i "s|OVPNTCP|$OpenVPN_TCP_Port|g" /etc/openvpn/server_tcp.conf
 sed -i "s|OVPNUDP|$OpenVPN_UDP_Port|g" /etc/openvpn/server_udp.conf
 
# Getting some OpenVPN plugins for unix authentication
cd
wget https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/plugin.tgz
tar -xzvf /root/plugin.tgz -C /etc/openvpn/
rm -f plugin.tgz
 
 # Some workaround for OpenVZ machines for "Startup error" openvpn service
 if [[ "$(hostnamectl | grep -i Virtualization | awk '{print $2}' | head -n1)" == 'openvz' ]]; then
 sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn*
 systemctl daemon-reload
fi

 # Allow IPv4 Forwarding
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.conf
 sed -i '/net.ipv4.ip_forward.*/d' /etc/sysctl.d/*.conf
 echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/20-openvpn.conf
 sysctl --system &> /dev/null

 # Iptables Rule for OpenVPN server
 cat <<'EOFipt' > /etc/openvpn/openvpn.bash
#!/bin/bash
PUBLIC_INET="$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)"
IPCIDR='10.200.0.0/16'
IPCIDR2='10.201.0.0/16'
iptables -I FORWARD -s $IPCIDR -j ACCEPT
iptables -I FORWARD -s $IPCIDR2 -j ACCEPT
iptables -t nat -A POSTROUTING -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR -o $PUBLIC_INET -j MASQUERADE
iptables -t nat -A POSTROUTING -s $IPCIDR2 -o $PUBLIC_INET -j MASQUERADE
EOFipt
 chmod +x /etc/openvpn/openvpn.bash
 bash /etc/openvpn/openvpn.bash

 # Enabling IPv4 Forwarding
 echo 1 > /proc/sys/net/ipv4/ip_forward

 
 # Starting OpenVPN server
 systemctl start openvpn@server_tcp
 systemctl enable openvpn@server_tcp
 systemctl start openvpn@server_udp
 systemctl enable openvpn@server_udp

}
function InsProxy(){

 # Removing Duplicate privoxy config
 rm -rf /etc/privoxy/config*
 
 # Creating Privoxy server config using cat eof tricks
 cat <<'privoxy' > /etc/privoxy/config
# My Privoxy Server Config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address 0.0.0.0:Privoxy_Port1
listen-address 0.0.0.0:Privoxy_Port2
toggle 1
enable-remote-toggle 0
enable-remote-http-toggle 0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries 1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 IP-ADDRESS
privoxy

 # Setting machine's IP Address inside of our privoxy config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/privoxy/config
 
 # Setting privoxy ports
 sed -i "s|Privoxy_Port1|$Privoxy_Port1|g" /etc/privoxy/config
 sed -i "s|Privoxy_Port2|$Privoxy_Port2|g" /etc/privoxy/config

 # Removing Duplicate Squid config
 rm -rf /etc/squid/squid.con*
 
 # Creating Squid server config using cat eof tricks
 cat <<'mySquid' > /etc/squid/squid.conf
# My Squid Proxy Server Config
acl VPN dst IP-ADDRESS/32
http_access allow VPN
http_access deny all 
http_port 0.0.0.0:Squid_Port1
http_port 0.0.0.0:Squid_Port2
http_port 0.0.0.0:Squid_Port3
### Allow Headers
acl all src 0.0.0.0/0
http_access allow all
forwarded_for off
via off
request_header_access Host allow all
request_header_access Content-Length allow all
request_header_access Content-Type allow all
request_header_access All deny all
coredump_dir /var/spool/squid
dns_nameservers 1.1.1.1 1.0.0.1
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname localhost
mySquid

 # Setting machine's IP Address inside of our Squid config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/squid/squid.conf
 
 # Setting squid ports
 sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
 sed -i "s|Squid_Port3|$Squid_Port3|g" /etc/squid/squid.conf

 # Starting Proxy server
 echo -e "Restarting proxy server..."
 systemctl restart squid
}

function OvpnConfigs(){
 # Creating nginx config for our ovpn config downloads webserver
 cat <<'myNginxC' > /etc/nginx/conf.d/johnfordtv-ovpn-config.conf
# My OpenVPN Config Download Directory
server {
 listen 0.0.0.0:myNginx;
 server_name localhost;
 root /var/www/openvpn;
 index index.html;
}
myNginxC

 # Setting our nginx config port for .ovpn download site
 sed -i "s|myNginx|$OvpnDownload_Port|g" /etc/nginx/conf.d/johnfordtv-ovpn-config.conf

 # Removing Default nginx page(port 80)
 rm -rf /etc/nginx/sites-*

 # Creating our root directory for all of our .ovpn configs
 rm -rf /var/www/openvpn
 mkdir -p /var/www/openvpn

 # Creating our root directory for all of our .ovpn configs
 rm -rf /var/www/openvpn
 mkdir -p /var/www/openvpn
# Now creating all of our OpenVPN Configs 
cat <<EOF152> /var/www/openvpn/tcp.ovpn
client
dev tun
remote $IPADDR $OpenVPN_TCP_Port tcp
http-proxy $IPADDR $Squid_Port1
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1

<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/client.crt)
</cert>
<key>
$(cat /etc/openvpn/client.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF152

cat <<EOF16> /var/www/openvpn/udp.ovpn
# Credits to GakodX
client
dev tun
proto udp
remote $IPADDR $OpenVPN_UDP_Port
remote-cert-tls server
resolv-retry infinite
float
fast-io
nobind
persist-key
persist-remote-ip
persist-tun
auth-user-pass
auth none
auth-nocache
cipher none
comp-lzo
redirect-gateway def1
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/client.crt)
</cert>
<key>
$(cat /etc/openvpn/client.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF16

cat <<EOF17> /var/www/openvpn/ssl.ovpn
client
proto tcp-client
dev tun
remote 127.0.0.1 443
route $IPADDR 255.255.255.255 net_gateway 
http-proxy $IPADDR 8080
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 100000
rcvbuf 100000
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/client.crt)
</cert>
<key>
$(cat /etc/openvpn/client.key)
</key>
<tls-auth>
$(cat /etc/openvpn/tls-auth.key)
</tls-auth>
EOF17

 # Creating OVPN download site index.html
cat <<'mySiteOvpn' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">

<!-- Simple OVPN Download site by Sigula -->

<head><meta charset="utf-8" /><title>Sigula OVPN Config Download</title><meta name="description" content="MyScriptName Server" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Config List</h5><br /><ul class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> UDP Server For TU/CTC/CTU Promos</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/tcp.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> TCP+Proxy Server For TU/CTC/CTU Promos</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/udp.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Globe/TM <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For EasySURF/GoSURF/GoSAKTO Promos with WNP,SNS,FB and IG freebies</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/ssl.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Modem</span><br /><small> Without Promo/Noload (Reconnecting Server, Use Low-latency VPS for fast reconnectivity)</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/sun-noload.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li></ul></div></div></div></div></body></html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
 sed -i "s|NGINXPORT|$OvpnDownload_Port|g" /var/www/openvpn/index.html
 sed -i "s|IP-ADDRESS|$IPADDR|g" /var/www/openvpn/index.html

 # Restarting nginx service
 systemctl restart nginx
 
 # Creating all .ovpn config archives
 cd /var/www/openvpn
 zip -qq -r configs.zip *.ovpn
 cd
}

function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)"

function ConfStartup(){
 # Daily reboot time of our machine
 # For cron commands, visit https://crontab.guru
 echo -e "0 4\t* * *\troot\treboot" > /etc/cron.d/b_reboot_job

 # Creating directory for startup script
 rm -rf /etc/Sigula
 mkdir -p /etc/Sigula
 chmod -R 755 /etc/Sigula
 
 # Creating startup script using cat eof tricks
 cat <<'EOFSH' > /etc/johnfordtv/startup.sh
#!/bin/bash
# Setting server local time
ln -fs /usr/share/zoneinfo/MyVPS_Time /etc/localtime

# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive

# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $(wget -4qO- http://ipinfo.io/ip) -p tcp -m multiport --dport 1:65535 -j ACCEPT

# Allowing OpenVPN to Forward traffic
/bin/bash /etc/openvpn/openvpn.bash

# Deleting Expired SSH Accounts
/usr/local/sbin/delete_expired &> /dev/null
exit 0
EOFSH
 cat <<'FordServ' > /etc/systemd/system/Sigula.service
 
 # Setting server local time every time this machine reboots
 sed -i "s|MyVPS_Time|$MyVPS_Time|g" /etc/Sigula/startup.sh

 # 
 rm -rf /etc/sysctl.d/99*

 # Setting our startup script to run every machine boots 
 cat <<'FordServ' > /etc/systemd/system/Sigula.service
[Unit]
Description=Sigula Startup Script
Before=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
ExecStart=/bin/bash /etc/Sigula/startup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
FordServ
 chmod +x /etc/systemd/system/Sigula.service
 systemctl daemon-reload
 systemctl start Sigula
 systemctl enable Sigula &> /dev/null
 systemctl enable fail2ban &> /dev/null
 systemctl start fail2ban &> /dev/null

 # Rebooting cron service
 systemctl restart cron
 systemctl enable cron
 
}
 #Create Admin
 useradd -m admin
 echo "admin:itangsagli" | chpasswd

function ConfMenu(){
echo -e " Creating Menu scripts.."

cd /usr/local/sbin/
rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
wget -q 'https://github.com/raziman869/AutoScriptDB/raw/master/Files/Menu/bashmenu.zip'
unzip -qq bashmenu.zip
rm -f bashmenu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd ~
}

function ScriptMessage(){
 echo -e " [\e[1;32m$MyScriptName VPS Installer\e[0m]"
 echo -e ""
 echo -e " t.me/sigula"
 echo -e " [PAYPAL] huhu86977@gmail.com"
 echo -e ""
}

function InstBadVPN(){
 # Pull BadVPN Binary 64bit or 32bit
if [ "$(getconf LONG_BIT)" == "64" ]; then
 wget -O /usr/bin/badvpn-udpgw "https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/badvpn-udpgw64"
else
 wget -O /usr/bin/badvpn-udpgw "https://github.com/raziman869/AutoScriptDB/raw/master/Files/Plugins/badvpn-udpgw"
fi
 # Set BadVPN to Start on Boot via .profile
 sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300' /root/.profile
 # Change Permission to make it Executable
 chmod +x /usr/bin/badvpn-udpgw
 # Start BadVPN via Screen
 screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300
}


#############################################
#############################################
########## Installation Process##############
#############################################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################################
#############################################

 # Begin Installation by Updating and Upgrading machine and then Installing all our wanted packages/services to be install.
 ScriptMessage
 sleep 2
 InstUpdates
 
 # Configure OpenSSH and Dropbear
 echo -e "Configuring ssh..."
 InstSSH
 
 # Configure Stunnel
 echo -e "Configuring stunnel..."
 InsStunnel
 
 # Configure BadVPN UDPGW
 echo -e "Configuring BadVPN UDPGW..."
 InstBadVPN
 
 # Configure Webmin
 echo -e "Configuring webmin..."
 InstWebmin
 
 # Configure Squid
 echo -e "Configuring proxy..."
 InsProxy
 
 # Configure OpenVPN
 echo -e "Configuring OpenVPN..."
 InsOpenVPN
 
 # Configuring Nginx OVPN config download site
 OvpnConfigs

 # Some assistance and startup scripts
 ConfStartup

 ## DNS maker plugin for SUN users(for vps script usage only)
 wget -qO dnsmaker "https://raw.githubusercontent.com/Bonveio/BonvScripts/master/DNSMaster/debian"
 chmod +x dnsmaker
 ./dnsmaker
 rm -rf dnsmaker
 sed -i "s|http-proxy $IPADDR|http-proxy $(cat /tmp/abonv_mydns)|g" /var/www/openvpn/suntu-dns.ovpn
 sed -i "s|remote $IPADDR|remote $(cat /tmp/abonv_mydns)|g" /var/www/openvpn/sun-tuudp.ovpn
 curl -4sSL "$(cat /tmp/abonv_mydns_domain)" &> /dev/null
 mv /tmp/abonv_mydns /etc/bonveio/my_domain_name
 mv /tmp/abonv_mydns_id /etc/bonveio/my_domain_id
 rm -rf /tmp/abonv*

 # VPS Menu script v1.0
 ConfMenu
 
 # Setting server local time
 ln -fs /usr/share/zoneinfo/$MyVPS_Time /etc/localtime
 
 clear
 cd ~
 
  # Running screenfetch
 wget -O /usr/bin/screenfetch "https://raw.githubusercontent.com/raziman869/AutoScriptDB/master/Files/Plugins/screenfetch"
 chmod +x /usr/bin/screenfetch
 echo "/bin/bash /etc/openvpn/openvpn.bash" >> .profile
 echo "clear" >> .profile
 echo "screenfetch" >> .profile

 
 # Showing script's banner message
 ScriptMessage
 
 # Showing additional information from installating this script
echo " "
echo "Installation has been completed!!"
echo "--------------------------------------------------------------------------------"
echo "                            Debian Premium Script                               "
echo "                                 -SigulaDev-                                   "
echo "--------------------------------------------------------------------------------"
echo ""  | tee -a log-install.txt
echo "Server Information"  | tee -a log-install.txt
echo "   - Timezone    : Asia/Malaysia (GMT +8)"  | tee -a log-install.txt
echo "   - Fail2Ban    : [ON]"  | tee -a log-install.txt
echo "   - IPtables    : [ON]"  | tee -a log-install.txt
echo "   - Auto-Reboot : [ON]"  | tee -a log-install.txt
echo "   - IPv6        : [OFF]"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Application & Port Information"  | tee -a log-install.txt
echo "   - OpenVPN		: TCP $OpenVPN_TCP_Port UDP $OpenVPN_UDP_Port "  | tee -a log-install.txt
echo "   - OpenSSH		: $SSH_Port1, $SSH_Port2 "  | tee -a log-install.txt
echo "   - Dropbear		: $Dropbear_Port1, $Dropbear_Port2"  | tee -a log-install.txt
echo "   - Stunnel/SSL 	: $Stunnel_Port1, $Stunnel_Port2"  | tee -a log-install.txt
echo "   - Squid Proxy	: $Squid_Port1 , $Squid_Port2 (limit to IP Server)"  | tee -a log-install.txt
echo "   - Squid ELITE	: $Squid_Port3 (limit to IP Server)"  | tee -a log-install.txt
echo "   - Privoxy		: $Privoxy_Port1 , $Privoxy_Port2 (limit to IP Server)"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Premium Script Information"  | tee -a log-install.txt
echo "   To display list of commands: menu"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Important Information"  | tee -a log-install.txt
echo "   - Installation Log        : cat /root/log-install.txt"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "   - Webmin                  : http://$IPADDR:10000/"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "OpenVPN Configs Download"  | tee -a log-install.txt
echo "   - Download Link           : http://$IPADDR:85/configs.zip"  | tee -a log-install.txt
echo " Ã‚Â©SigulaDev"  | tee -a log-install.txt
echo " t.me/sigula"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo " This script is under project of https://github.com/raziman869/AutoScriptDB"  | tee -a log-install.txt
echo " Please Reboot your VPS"

 # Clearing all logs from installation
 rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog

rm -f 83*
exit 1
